/*    */ package nencer.app.Modules.Customer.Model;public class CustomerShortModel { private Integer customerId; private String name;
/*    */   private String phone;
/*    */   private String idCard;
/*    */   private String yearBorn;
/*    */   private Integer age;
/*    */   private CustomerDetailsShortModel customerDetailsInfo;
/*    */   
/*  8 */   public static CustomerShortModelBuilder builder() { return new CustomerShortModelBuilder(); } public static class CustomerShortModelBuilder { private Integer customerId; private String name; private String phone; public CustomerShortModelBuilder customerId(Integer customerId) { this.customerId = customerId; return this; } private String idCard; private String yearBorn; private Integer age; private CustomerDetailsShortModel customerDetailsInfo; public CustomerShortModelBuilder name(String name) { this.name = name; return this; } public CustomerShortModelBuilder phone(String phone) { this.phone = phone; return this; } public CustomerShortModelBuilder idCard(String idCard) { this.idCard = idCard; return this; } public CustomerShortModelBuilder yearBorn(String yearBorn) { this.yearBorn = yearBorn; return this; } public CustomerShortModelBuilder age(Integer age) { this.age = age; return this; } public CustomerShortModelBuilder customerDetailsInfo(CustomerDetailsShortModel customerDetailsInfo) { this.customerDetailsInfo = customerDetailsInfo; return this; } public CustomerShortModel build() { return new CustomerShortModel(this.customerId, this.name, this.phone, this.idCard, this.yearBorn, this.age, this.customerDetailsInfo); } public String toString() { return "CustomerShortModel.CustomerShortModelBuilder(customerId=" + this.customerId + ", name=" + this.name + ", phone=" + this.phone + ", idCard=" + this.idCard + ", yearBorn=" + this.yearBorn + ", age=" + this.age + ", customerDetailsInfo=" + this.customerDetailsInfo + ")"; } }
/*  9 */   public void setCustomerId(Integer customerId) { this.customerId = customerId; } public void setName(String name) { this.name = name; } public void setPhone(String phone) { this.phone = phone; } public void setIdCard(String idCard) { this.idCard = idCard; } public void setYearBorn(String yearBorn) { this.yearBorn = yearBorn; } public void setAge(Integer age) { this.age = age; } public void setCustomerDetailsInfo(CustomerDetailsShortModel customerDetailsInfo) { this.customerDetailsInfo = customerDetailsInfo; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof CustomerShortModel)) return false;  CustomerShortModel other = (CustomerShortModel)o; if (!other.canEqual(this)) return false;  Object this$customerId = getCustomerId(), other$customerId = other.getCustomerId(); if ((this$customerId == null) ? (other$customerId != null) : !this$customerId.equals(other$customerId)) return false;  Object this$name = getName(), other$name = other.getName(); if ((this$name == null) ? (other$name != null) : !this$name.equals(other$name)) return false;  Object this$phone = getPhone(), other$phone = other.getPhone(); if ((this$phone == null) ? (other$phone != null) : !this$phone.equals(other$phone)) return false;  Object this$idCard = getIdCard(), other$idCard = other.getIdCard(); if ((this$idCard == null) ? (other$idCard != null) : !this$idCard.equals(other$idCard)) return false;  Object this$yearBorn = getYearBorn(), other$yearBorn = other.getYearBorn(); if ((this$yearBorn == null) ? (other$yearBorn != null) : !this$yearBorn.equals(other$yearBorn)) return false;  Object this$age = getAge(), other$age = other.getAge(); if ((this$age == null) ? (other$age != null) : !this$age.equals(other$age)) return false;  Object this$customerDetailsInfo = getCustomerDetailsInfo(), other$customerDetailsInfo = other.getCustomerDetailsInfo(); return !((this$customerDetailsInfo == null) ? (other$customerDetailsInfo != null) : !this$customerDetailsInfo.equals(other$customerDetailsInfo)); } protected boolean canEqual(Object other) { return other instanceof CustomerShortModel; } public int hashCode() { int PRIME = 59; result = 1; Object $customerId = getCustomerId(); result = result * 59 + (($customerId == null) ? 43 : $customerId.hashCode()); Object $name = getName(); result = result * 59 + (($name == null) ? 43 : $name.hashCode()); Object $phone = getPhone(); result = result * 59 + (($phone == null) ? 43 : $phone.hashCode()); Object $idCard = getIdCard(); result = result * 59 + (($idCard == null) ? 43 : $idCard.hashCode()); Object $yearBorn = getYearBorn(); result = result * 59 + (($yearBorn == null) ? 43 : $yearBorn.hashCode()); Object $age = getAge(); result = result * 59 + (($age == null) ? 43 : $age.hashCode()); Object $customerDetailsInfo = getCustomerDetailsInfo(); return result * 59 + (($customerDetailsInfo == null) ? 43 : $customerDetailsInfo.hashCode()); } public String toString() { return "CustomerShortModel(customerId=" + getCustomerId() + ", name=" + getName() + ", phone=" + getPhone() + ", idCard=" + getIdCard() + ", yearBorn=" + getYearBorn() + ", age=" + getAge() + ", customerDetailsInfo=" + getCustomerDetailsInfo() + ")"; } public CustomerShortModel(Integer customerId, String name, String phone, String idCard, String yearBorn, Integer age, CustomerDetailsShortModel customerDetailsInfo) {
/* 10 */     this.customerId = customerId; this.name = name; this.phone = phone; this.idCard = idCard; this.yearBorn = yearBorn; this.age = age; this.customerDetailsInfo = customerDetailsInfo;
/*    */   }
/*    */   public CustomerShortModel() {}
/* 13 */   public Integer getCustomerId() { return this.customerId; }
/* 14 */   public String getName() { return this.name; }
/* 15 */   public String getPhone() { return this.phone; }
/* 16 */   public String getIdCard() { return this.idCard; }
/* 17 */   public String getYearBorn() { return this.yearBorn; } public Integer getAge() {
/* 18 */     return this.age;
/*    */   } public CustomerDetailsShortModel getCustomerDetailsInfo() {
/* 20 */     return this.customerDetailsInfo;
/*    */   } }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Customer\Model\CustomerShortModel.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */