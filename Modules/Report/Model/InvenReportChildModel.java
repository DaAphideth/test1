/*    */ package nencer.app.Modules.Report.Model;
/*    */ public class InvenReportChildModel { private Integer stt; private Integer storehouseId; private String storehouseName; private Integer productId; private String productCode; private String productName; private String activeIng; private String volume; private String concentration; private String unit; private String producer; private String registerNumber;
/*    */   private String countryCode;
/*    */   
/*  5 */   public void setStt(Integer stt) { this.stt = stt; } private String brandCode; private String productType; private String productTypeName; private String usageProduct; private Integer qtyBegin; private Double priceBegin; private Integer qtyImport; private Double priceImport; private Integer qtyExport; private Double priceExport; private Integer qtyEnd; private Double priceEnd; private Double priceVAT; private Integer totalRecord; public void setStorehouseId(Integer storehouseId) { this.storehouseId = storehouseId; } public void setStorehouseName(String storehouseName) { this.storehouseName = storehouseName; } public void setProductId(Integer productId) { this.productId = productId; } public void setProductCode(String productCode) { this.productCode = productCode; } public void setProductName(String productName) { this.productName = productName; } public void setActiveIng(String activeIng) { this.activeIng = activeIng; } public void setVolume(String volume) { this.volume = volume; } public void setConcentration(String concentration) { this.concentration = concentration; } public void setUnit(String unit) { this.unit = unit; } public void setProducer(String producer) { this.producer = producer; } public void setRegisterNumber(String registerNumber) { this.registerNumber = registerNumber; } public void setCountryCode(String countryCode) { this.countryCode = countryCode; } public void setBrandCode(String brandCode) { this.brandCode = brandCode; } public void setProductType(String productType) { this.productType = productType; } public void setProductTypeName(String productTypeName) { this.productTypeName = productTypeName; } public void setUsageProduct(String usageProduct) { this.usageProduct = usageProduct; } public void setQtyBegin(Integer qtyBegin) { this.qtyBegin = qtyBegin; } public void setPriceBegin(Double priceBegin) { this.priceBegin = priceBegin; } public void setQtyImport(Integer qtyImport) { this.qtyImport = qtyImport; } public void setPriceImport(Double priceImport) { this.priceImport = priceImport; } public void setQtyExport(Integer qtyExport) { this.qtyExport = qtyExport; } public void setPriceExport(Double priceExport) { this.priceExport = priceExport; } public void setQtyEnd(Integer qtyEnd) { this.qtyEnd = qtyEnd; } public void setPriceEnd(Double priceEnd) { this.priceEnd = priceEnd; } public void setPriceVAT(Double priceVAT) { this.priceVAT = priceVAT; } public void setTotalRecord(Integer totalRecord) { this.totalRecord = totalRecord; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof InvenReportChildModel)) return false;  InvenReportChildModel other = (InvenReportChildModel)o; if (!other.canEqual(this)) return false;  Object this$stt = getStt(), other$stt = other.getStt(); if ((this$stt == null) ? (other$stt != null) : !this$stt.equals(other$stt)) return false;  Object this$storehouseId = getStorehouseId(), other$storehouseId = other.getStorehouseId(); if ((this$storehouseId == null) ? (other$storehouseId != null) : !this$storehouseId.equals(other$storehouseId)) return false;  Object this$storehouseName = getStorehouseName(), other$storehouseName = other.getStorehouseName(); if ((this$storehouseName == null) ? (other$storehouseName != null) : !this$storehouseName.equals(other$storehouseName)) return false;  Object this$productId = getProductId(), other$productId = other.getProductId(); if ((this$productId == null) ? (other$productId != null) : !this$productId.equals(other$productId)) return false;  Object this$productCode = getProductCode(), other$productCode = other.getProductCode(); if ((this$productCode == null) ? (other$productCode != null) : !this$productCode.equals(other$productCode)) return false;  Object this$productName = getProductName(), other$productName = other.getProductName(); if ((this$productName == null) ? (other$productName != null) : !this$productName.equals(other$productName)) return false;  Object this$activeIng = getActiveIng(), other$activeIng = other.getActiveIng(); if ((this$activeIng == null) ? (other$activeIng != null) : !this$activeIng.equals(other$activeIng)) return false;  Object this$volume = getVolume(), other$volume = other.getVolume(); if ((this$volume == null) ? (other$volume != null) : !this$volume.equals(other$volume)) return false;  Object this$concentration = getConcentration(), other$concentration = other.getConcentration(); if ((this$concentration == null) ? (other$concentration != null) : !this$concentration.equals(other$concentration)) return false;  Object this$unit = getUnit(), other$unit = other.getUnit(); if ((this$unit == null) ? (other$unit != null) : !this$unit.equals(other$unit)) return false;  Object this$producer = getProducer(), other$producer = other.getProducer(); if ((this$producer == null) ? (other$producer != null) : !this$producer.equals(other$producer)) return false;  Object this$registerNumber = getRegisterNumber(), other$registerNumber = other.getRegisterNumber(); if ((this$registerNumber == null) ? (other$registerNumber != null) : !this$registerNumber.equals(other$registerNumber)) return false;  Object this$countryCode = getCountryCode(), other$countryCode = other.getCountryCode(); if ((this$countryCode == null) ? (other$countryCode != null) : !this$countryCode.equals(other$countryCode)) return false;  Object this$brandCode = getBrandCode(), other$brandCode = other.getBrandCode(); if ((this$brandCode == null) ? (other$brandCode != null) : !this$brandCode.equals(other$brandCode)) return false;  Object this$productType = getProductType(), other$productType = other.getProductType(); if ((this$productType == null) ? (other$productType != null) : !this$productType.equals(other$productType)) return false;  Object this$productTypeName = getProductTypeName(), other$productTypeName = other.getProductTypeName(); if ((this$productTypeName == null) ? (other$productTypeName != null) : !this$productTypeName.equals(other$productTypeName)) return false;  Object this$usageProduct = getUsageProduct(), other$usageProduct = other.getUsageProduct(); if ((this$usageProduct == null) ? (other$usageProduct != null) : !this$usageProduct.equals(other$usageProduct)) return false;  Object this$qtyBegin = getQtyBegin(), other$qtyBegin = other.getQtyBegin(); if ((this$qtyBegin == null) ? (other$qtyBegin != null) : !this$qtyBegin.equals(other$qtyBegin)) return false;  Object this$priceBegin = getPriceBegin(), other$priceBegin = other.getPriceBegin(); if ((this$priceBegin == null) ? (other$priceBegin != null) : !this$priceBegin.equals(other$priceBegin)) return false;  Object this$qtyImport = getQtyImport(), other$qtyImport = other.getQtyImport(); if ((this$qtyImport == null) ? (other$qtyImport != null) : !this$qtyImport.equals(other$qtyImport)) return false;  Object this$priceImport = getPriceImport(), other$priceImport = other.getPriceImport(); if ((this$priceImport == null) ? (other$priceImport != null) : !this$priceImport.equals(other$priceImport)) return false;  Object this$qtyExport = getQtyExport(), other$qtyExport = other.getQtyExport(); if ((this$qtyExport == null) ? (other$qtyExport != null) : !this$qtyExport.equals(other$qtyExport)) return false;  Object this$priceExport = getPriceExport(), other$priceExport = other.getPriceExport(); if ((this$priceExport == null) ? (other$priceExport != null) : !this$priceExport.equals(other$priceExport)) return false;  Object this$qtyEnd = getQtyEnd(), other$qtyEnd = other.getQtyEnd(); if ((this$qtyEnd == null) ? (other$qtyEnd != null) : !this$qtyEnd.equals(other$qtyEnd)) return false;  Object this$priceEnd = getPriceEnd(), other$priceEnd = other.getPriceEnd(); if ((this$priceEnd == null) ? (other$priceEnd != null) : !this$priceEnd.equals(other$priceEnd)) return false;  Object this$priceVAT = getPriceVAT(), other$priceVAT = other.getPriceVAT(); if ((this$priceVAT == null) ? (other$priceVAT != null) : !this$priceVAT.equals(other$priceVAT)) return false;  Object this$totalRecord = getTotalRecord(), other$totalRecord = other.getTotalRecord(); return !((this$totalRecord == null) ? (other$totalRecord != null) : !this$totalRecord.equals(other$totalRecord)); } protected boolean canEqual(Object other) { return other instanceof InvenReportChildModel; } public int hashCode() { int PRIME = 59; result = 1; Object $stt = getStt(); result = result * 59 + (($stt == null) ? 43 : $stt.hashCode()); Object $storehouseId = getStorehouseId(); result = result * 59 + (($storehouseId == null) ? 43 : $storehouseId.hashCode()); Object $storehouseName = getStorehouseName(); result = result * 59 + (($storehouseName == null) ? 43 : $storehouseName.hashCode()); Object $productId = getProductId(); result = result * 59 + (($productId == null) ? 43 : $productId.hashCode()); Object $productCode = getProductCode(); result = result * 59 + (($productCode == null) ? 43 : $productCode.hashCode()); Object $productName = getProductName(); result = result * 59 + (($productName == null) ? 43 : $productName.hashCode()); Object $activeIng = getActiveIng(); result = result * 59 + (($activeIng == null) ? 43 : $activeIng.hashCode()); Object $volume = getVolume(); result = result * 59 + (($volume == null) ? 43 : $volume.hashCode()); Object $concentration = getConcentration(); result = result * 59 + (($concentration == null) ? 43 : $concentration.hashCode()); Object $unit = getUnit(); result = result * 59 + (($unit == null) ? 43 : $unit.hashCode()); Object $producer = getProducer(); result = result * 59 + (($producer == null) ? 43 : $producer.hashCode()); Object $registerNumber = getRegisterNumber(); result = result * 59 + (($registerNumber == null) ? 43 : $registerNumber.hashCode()); Object $countryCode = getCountryCode(); result = result * 59 + (($countryCode == null) ? 43 : $countryCode.hashCode()); Object $brandCode = getBrandCode(); result = result * 59 + (($brandCode == null) ? 43 : $brandCode.hashCode()); Object $productType = getProductType(); result = result * 59 + (($productType == null) ? 43 : $productType.hashCode()); Object $productTypeName = getProductTypeName(); result = result * 59 + (($productTypeName == null) ? 43 : $productTypeName.hashCode()); Object $usageProduct = getUsageProduct(); result = result * 59 + (($usageProduct == null) ? 43 : $usageProduct.hashCode()); Object $qtyBegin = getQtyBegin(); result = result * 59 + (($qtyBegin == null) ? 43 : $qtyBegin.hashCode()); Object $priceBegin = getPriceBegin(); result = result * 59 + (($priceBegin == null) ? 43 : $priceBegin.hashCode()); Object $qtyImport = getQtyImport(); result = result * 59 + (($qtyImport == null) ? 43 : $qtyImport.hashCode()); Object $priceImport = getPriceImport(); result = result * 59 + (($priceImport == null) ? 43 : $priceImport.hashCode()); Object $qtyExport = getQtyExport(); result = result * 59 + (($qtyExport == null) ? 43 : $qtyExport.hashCode()); Object $priceExport = getPriceExport(); result = result * 59 + (($priceExport == null) ? 43 : $priceExport.hashCode()); Object $qtyEnd = getQtyEnd(); result = result * 59 + (($qtyEnd == null) ? 43 : $qtyEnd.hashCode()); Object $priceEnd = getPriceEnd(); result = result * 59 + (($priceEnd == null) ? 43 : $priceEnd.hashCode()); Object $priceVAT = getPriceVAT(); result = result * 59 + (($priceVAT == null) ? 43 : $priceVAT.hashCode()); Object $totalRecord = getTotalRecord(); return result * 59 + (($totalRecord == null) ? 43 : $totalRecord.hashCode()); } public String toString() { return "InvenReportChildModel(stt=" + getStt() + ", storehouseId=" + getStorehouseId() + ", storehouseName=" + getStorehouseName() + ", productId=" + getProductId() + ", productCode=" + getProductCode() + ", productName=" + getProductName() + ", activeIng=" + getActiveIng() + ", volume=" + getVolume() + ", concentration=" + getConcentration() + ", unit=" + getUnit() + ", producer=" + getProducer() + ", registerNumber=" + getRegisterNumber() + ", countryCode=" + getCountryCode() + ", brandCode=" + getBrandCode() + ", productType=" + getProductType() + ", productTypeName=" + getProductTypeName() + ", usageProduct=" + getUsageProduct() + ", qtyBegin=" + getQtyBegin() + ", priceBegin=" + getPriceBegin() + ", qtyImport=" + getQtyImport() + ", priceImport=" + getPriceImport() + ", qtyExport=" + getQtyExport() + ", priceExport=" + getPriceExport() + ", qtyEnd=" + getQtyEnd() + ", priceEnd=" + getPriceEnd() + ", priceVAT=" + getPriceVAT() + ", totalRecord=" + getTotalRecord() + ")"; }
/*    */   
/*  7 */   public Integer getStt() { return this.stt; }
/*  8 */   public Integer getStorehouseId() { return this.storehouseId; } public String getStorehouseName() {
/*  9 */     return this.storehouseName;
/*    */   }
/* 11 */   public Integer getProductId() { return this.productId; }
/* 12 */   public String getProductCode() { return this.productCode; }
/* 13 */   public String getProductName() { return this.productName; }
/* 14 */   public String getActiveIng() { return this.activeIng; }
/* 15 */   public String getVolume() { return this.volume; } public String getConcentration() {
/* 16 */     return this.concentration;
/*    */   } public String getUnit() {
/* 18 */     return this.unit;
/*    */   }
/* 20 */   public String getProducer() { return this.producer; }
/* 21 */   public String getRegisterNumber() { return this.registerNumber; }
/* 22 */   public String getCountryCode() { return this.countryCode; } public String getBrandCode() {
/* 23 */     return this.brandCode;
/*    */   }
/* 25 */   public String getProductType() { return this.productType; }
/* 26 */   public String getProductTypeName() { return this.productTypeName; } public String getUsageProduct() {
/* 27 */     return this.usageProduct;
/*    */   }
/* 29 */   public Integer getQtyBegin() { return this.qtyBegin; }
/* 30 */   public Double getPriceBegin() { return this.priceBegin; }
/* 31 */   public Integer getQtyImport() { return this.qtyImport; }
/* 32 */   public Double getPriceImport() { return this.priceImport; }
/* 33 */   public Integer getQtyExport() { return this.qtyExport; }
/* 34 */   public Double getPriceExport() { return this.priceExport; }
/* 35 */   public Integer getQtyEnd() { return this.qtyEnd; }
/* 36 */   public Double getPriceEnd() { return this.priceEnd; } public Double getPriceVAT() {
/* 37 */     return this.priceVAT;
/*    */   } public Integer getTotalRecord() {
/* 39 */     return this.totalRecord;
/*    */   } }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Report\Model\InvenReportChildModel.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */