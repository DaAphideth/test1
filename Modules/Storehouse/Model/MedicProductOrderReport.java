/*    */ package nencer.app.Modules.Storehouse.Model;
/*    */ @JsonIgnoreProperties(ignoreUnknown = true)
/*    */ public class MedicProductOrderReport { private Integer productId; private String productCode; private String productName; private String activeIng; private String volume; private String unit; private String usageProduct; private String producer; private String countryCode; private String registerNumber;
/*    */   private String priceInput;
/*    */   
/*  6 */   public void setProductId(Integer productId) { this.productId = productId; } private String price; private String priceIns; private String priceFee; private String batchNumber; private String bidNumber; private String productionDate; private String expirationDate; private String qtyBegin; private String qtyEnd; private Integer qty; private String qtyInput; public void setProductCode(String productCode) { this.productCode = productCode; } public void setProductName(String productName) { this.productName = productName; } public void setActiveIng(String activeIng) { this.activeIng = activeIng; } public void setVolume(String volume) { this.volume = volume; } public void setUnit(String unit) { this.unit = unit; } public void setUsageProduct(String usageProduct) { this.usageProduct = usageProduct; } public void setProducer(String producer) { this.producer = producer; } public void setCountryCode(String countryCode) { this.countryCode = countryCode; } public void setRegisterNumber(String registerNumber) { this.registerNumber = registerNumber; } public void setPriceInput(String priceInput) { this.priceInput = priceInput; } public void setPrice(String price) { this.price = price; } public void setPriceIns(String priceIns) { this.priceIns = priceIns; } public void setPriceFee(String priceFee) { this.priceFee = priceFee; } public void setBatchNumber(String batchNumber) { this.batchNumber = batchNumber; } public void setBidNumber(String bidNumber) { this.bidNumber = bidNumber; } public void setProductionDate(String productionDate) { this.productionDate = productionDate; } public void setExpirationDate(String expirationDate) { this.expirationDate = expirationDate; } public void setQtyBegin(String qtyBegin) { this.qtyBegin = qtyBegin; } public void setQtyEnd(String qtyEnd) { this.qtyEnd = qtyEnd; } public void setQty(Integer qty) { this.qty = qty; } public void setQtyInput(String qtyInput) { this.qtyInput = qtyInput; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof MedicProductOrderReport)) return false;  MedicProductOrderReport other = (MedicProductOrderReport)o; if (!other.canEqual(this)) return false;  Object this$productId = getProductId(), other$productId = other.getProductId(); if ((this$productId == null) ? (other$productId != null) : !this$productId.equals(other$productId)) return false;  Object this$productCode = getProductCode(), other$productCode = other.getProductCode(); if ((this$productCode == null) ? (other$productCode != null) : !this$productCode.equals(other$productCode)) return false;  Object this$productName = getProductName(), other$productName = other.getProductName(); if ((this$productName == null) ? (other$productName != null) : !this$productName.equals(other$productName)) return false;  Object this$activeIng = getActiveIng(), other$activeIng = other.getActiveIng(); if ((this$activeIng == null) ? (other$activeIng != null) : !this$activeIng.equals(other$activeIng)) return false;  Object this$volume = getVolume(), other$volume = other.getVolume(); if ((this$volume == null) ? (other$volume != null) : !this$volume.equals(other$volume)) return false;  Object this$unit = getUnit(), other$unit = other.getUnit(); if ((this$unit == null) ? (other$unit != null) : !this$unit.equals(other$unit)) return false;  Object this$usageProduct = getUsageProduct(), other$usageProduct = other.getUsageProduct(); if ((this$usageProduct == null) ? (other$usageProduct != null) : !this$usageProduct.equals(other$usageProduct)) return false;  Object this$producer = getProducer(), other$producer = other.getProducer(); if ((this$producer == null) ? (other$producer != null) : !this$producer.equals(other$producer)) return false;  Object this$countryCode = getCountryCode(), other$countryCode = other.getCountryCode(); if ((this$countryCode == null) ? (other$countryCode != null) : !this$countryCode.equals(other$countryCode)) return false;  Object this$registerNumber = getRegisterNumber(), other$registerNumber = other.getRegisterNumber(); if ((this$registerNumber == null) ? (other$registerNumber != null) : !this$registerNumber.equals(other$registerNumber)) return false;  Object this$priceInput = getPriceInput(), other$priceInput = other.getPriceInput(); if ((this$priceInput == null) ? (other$priceInput != null) : !this$priceInput.equals(other$priceInput)) return false;  Object this$price = getPrice(), other$price = other.getPrice(); if ((this$price == null) ? (other$price != null) : !this$price.equals(other$price)) return false;  Object this$priceIns = getPriceIns(), other$priceIns = other.getPriceIns(); if ((this$priceIns == null) ? (other$priceIns != null) : !this$priceIns.equals(other$priceIns)) return false;  Object this$priceFee = getPriceFee(), other$priceFee = other.getPriceFee(); if ((this$priceFee == null) ? (other$priceFee != null) : !this$priceFee.equals(other$priceFee)) return false;  Object this$batchNumber = getBatchNumber(), other$batchNumber = other.getBatchNumber(); if ((this$batchNumber == null) ? (other$batchNumber != null) : !this$batchNumber.equals(other$batchNumber)) return false;  Object this$bidNumber = getBidNumber(), other$bidNumber = other.getBidNumber(); if ((this$bidNumber == null) ? (other$bidNumber != null) : !this$bidNumber.equals(other$bidNumber)) return false;  Object this$productionDate = getProductionDate(), other$productionDate = other.getProductionDate(); if ((this$productionDate == null) ? (other$productionDate != null) : !this$productionDate.equals(other$productionDate)) return false;  Object this$expirationDate = getExpirationDate(), other$expirationDate = other.getExpirationDate(); if ((this$expirationDate == null) ? (other$expirationDate != null) : !this$expirationDate.equals(other$expirationDate)) return false;  Object this$qtyBegin = getQtyBegin(), other$qtyBegin = other.getQtyBegin(); if ((this$qtyBegin == null) ? (other$qtyBegin != null) : !this$qtyBegin.equals(other$qtyBegin)) return false;  Object this$qtyEnd = getQtyEnd(), other$qtyEnd = other.getQtyEnd(); if ((this$qtyEnd == null) ? (other$qtyEnd != null) : !this$qtyEnd.equals(other$qtyEnd)) return false;  Object this$qty = getQty(), other$qty = other.getQty(); if ((this$qty == null) ? (other$qty != null) : !this$qty.equals(other$qty)) return false;  Object this$qtyInput = getQtyInput(), other$qtyInput = other.getQtyInput(); return !((this$qtyInput == null) ? (other$qtyInput != null) : !this$qtyInput.equals(other$qtyInput)); } protected boolean canEqual(Object other) { return other instanceof MedicProductOrderReport; } public int hashCode() { int PRIME = 59; result = 1; Object $productId = getProductId(); result = result * 59 + (($productId == null) ? 43 : $productId.hashCode()); Object $productCode = getProductCode(); result = result * 59 + (($productCode == null) ? 43 : $productCode.hashCode()); Object $productName = getProductName(); result = result * 59 + (($productName == null) ? 43 : $productName.hashCode()); Object $activeIng = getActiveIng(); result = result * 59 + (($activeIng == null) ? 43 : $activeIng.hashCode()); Object $volume = getVolume(); result = result * 59 + (($volume == null) ? 43 : $volume.hashCode()); Object $unit = getUnit(); result = result * 59 + (($unit == null) ? 43 : $unit.hashCode()); Object $usageProduct = getUsageProduct(); result = result * 59 + (($usageProduct == null) ? 43 : $usageProduct.hashCode()); Object $producer = getProducer(); result = result * 59 + (($producer == null) ? 43 : $producer.hashCode()); Object $countryCode = getCountryCode(); result = result * 59 + (($countryCode == null) ? 43 : $countryCode.hashCode()); Object $registerNumber = getRegisterNumber(); result = result * 59 + (($registerNumber == null) ? 43 : $registerNumber.hashCode()); Object $priceInput = getPriceInput(); result = result * 59 + (($priceInput == null) ? 43 : $priceInput.hashCode()); Object $price = getPrice(); result = result * 59 + (($price == null) ? 43 : $price.hashCode()); Object $priceIns = getPriceIns(); result = result * 59 + (($priceIns == null) ? 43 : $priceIns.hashCode()); Object $priceFee = getPriceFee(); result = result * 59 + (($priceFee == null) ? 43 : $priceFee.hashCode()); Object $batchNumber = getBatchNumber(); result = result * 59 + (($batchNumber == null) ? 43 : $batchNumber.hashCode()); Object $bidNumber = getBidNumber(); result = result * 59 + (($bidNumber == null) ? 43 : $bidNumber.hashCode()); Object $productionDate = getProductionDate(); result = result * 59 + (($productionDate == null) ? 43 : $productionDate.hashCode()); Object $expirationDate = getExpirationDate(); result = result * 59 + (($expirationDate == null) ? 43 : $expirationDate.hashCode()); Object $qtyBegin = getQtyBegin(); result = result * 59 + (($qtyBegin == null) ? 43 : $qtyBegin.hashCode()); Object $qtyEnd = getQtyEnd(); result = result * 59 + (($qtyEnd == null) ? 43 : $qtyEnd.hashCode()); Object $qty = getQty(); result = result * 59 + (($qty == null) ? 43 : $qty.hashCode()); Object $qtyInput = getQtyInput(); return result * 59 + (($qtyInput == null) ? 43 : $qtyInput.hashCode()); } public String toString() { return "MedicProductOrderReport(productId=" + getProductId() + ", productCode=" + getProductCode() + ", productName=" + getProductName() + ", activeIng=" + getActiveIng() + ", volume=" + getVolume() + ", unit=" + getUnit() + ", usageProduct=" + getUsageProduct() + ", producer=" + getProducer() + ", countryCode=" + getCountryCode() + ", registerNumber=" + getRegisterNumber() + ", priceInput=" + getPriceInput() + ", price=" + getPrice() + ", priceIns=" + getPriceIns() + ", priceFee=" + getPriceFee() + ", batchNumber=" + getBatchNumber() + ", bidNumber=" + getBidNumber() + ", productionDate=" + getProductionDate() + ", expirationDate=" + getExpirationDate() + ", qtyBegin=" + getQtyBegin() + ", qtyEnd=" + getQtyEnd() + ", qty=" + getQty() + ", qtyInput=" + getQtyInput() + ")"; }
/*    */ 
/*    */   
/*    */   public Integer getProductId() {
/* 10 */     return this.productId;
/* 11 */   } public String getProductCode() { return this.productCode; }
/* 12 */   public String getProductName() { return this.productName; }
/* 13 */   public String getActiveIng() { return this.activeIng; }
/* 14 */   public String getVolume() { return this.volume; }
/* 15 */   public String getUnit() { return this.unit; }
/* 16 */   public String getUsageProduct() { return this.usageProduct; }
/* 17 */   public String getProducer() { return this.producer; }
/* 18 */   public String getCountryCode() { return this.countryCode; }
/* 19 */   public String getRegisterNumber() { return this.registerNumber; }
/* 20 */   public String getPriceInput() { return this.priceInput; }
/* 21 */   public String getPrice() { return this.price; }
/* 22 */   public String getPriceIns() { return this.priceIns; }
/* 23 */   public String getPriceFee() { return this.priceFee; }
/* 24 */   public String getBatchNumber() { return this.batchNumber; }
/* 25 */   public String getBidNumber() { return this.bidNumber; }
/* 26 */   public String getProductionDate() { return this.productionDate; }
/* 27 */   public String getExpirationDate() { return this.expirationDate; }
/* 28 */   public String getQtyBegin() { return this.qtyBegin; }
/* 29 */   public String getQtyEnd() { return this.qtyEnd; }
/* 30 */   public Integer getQty() { return this.qty; } public String getQtyInput() {
/* 31 */     return this.qtyInput;
/*    */   } }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Storehouse\Model\MedicProductOrderReport.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */