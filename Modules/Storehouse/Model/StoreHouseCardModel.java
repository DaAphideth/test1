/*    */ package nencer.app.Modules.Storehouse.Model;public class StoreHouseCardModel { private Integer stt; private Integer invenId; private Integer storehouseId; private Date createdAt; private String storehouseName; private Integer orderId; private String orderCode; private String batchNumber; private Date expirationDate; private String expirationDateFe; private Integer productId; private String productCode; private String productName; private String producer; private String registerNumber; private String countryCode; private String brandCode; private String bidNumber; private String bidGroup; private String bidYear; private String bidPackage; private String packageCode; private String productType; private String volume; private String usageProduct; private String unit; private String concentration; private Integer qty; private Integer qtyLock; private Integer qtyAvailable; private Integer qtyBegin; private Integer qtyImport; private Integer vat; private Integer qtyExport; private Integer qtyEnd; private Double price; private Double priceSelling; private Double priceInput; private Double priceRequest; private Double priceHospital;
/*    */   private Double priceIns;
/*    */   private Double totalPrice;
/*    */   private String note;
/*    */   private String activeIng;
/*    */   private Integer orderDetailId;
/*    */   private String barcode;
/*    */   private Integer totalRecord;
/*    */   private String colorCode;
/*    */   private List<StoreHouseCardModel> children;
/*    */   
/* 12 */   public static StoreHouseCardModelBuilder builder() { return new StoreHouseCardModelBuilder(); } public static class StoreHouseCardModelBuilder { private Integer stt; private Integer invenId; private Integer storehouseId; private Date createdAt; private String storehouseName; private Integer orderId; private String orderCode; private String batchNumber; private Date expirationDate; private String expirationDateFe; private Integer productId; private String productCode; private String productName; private String producer; private String registerNumber; private String countryCode; private String brandCode; private String bidNumber; private String bidGroup; private String bidYear; private String bidPackage; private String packageCode; private String productType; private String volume; public StoreHouseCardModelBuilder stt(Integer stt) { this.stt = stt; return this; } private String usageProduct; private String unit; private String concentration; private Integer qty; private Integer qtyLock; private Integer qtyAvailable; private Integer qtyBegin; private Integer qtyImport; private Integer vat; private Integer qtyExport; private Integer qtyEnd; private Double price; private Double priceSelling; private Double priceInput; private Double priceRequest; private Double priceHospital; private Double priceIns; private Double totalPrice; private String note; private String activeIng; private Integer orderDetailId; private String barcode; private Integer totalRecord; private String colorCode; private List<StoreHouseCardModel> children; public StoreHouseCardModelBuilder invenId(Integer invenId) { this.invenId = invenId; return this; } public StoreHouseCardModelBuilder storehouseId(Integer storehouseId) { this.storehouseId = storehouseId; return this; } public StoreHouseCardModelBuilder createdAt(Date createdAt) { this.createdAt = createdAt; return this; } public StoreHouseCardModelBuilder storehouseName(String storehouseName) { this.storehouseName = storehouseName; return this; } public StoreHouseCardModelBuilder orderId(Integer orderId) { this.orderId = orderId; return this; } public StoreHouseCardModelBuilder orderCode(String orderCode) { this.orderCode = orderCode; return this; } public StoreHouseCardModelBuilder batchNumber(String batchNumber) { this.batchNumber = batchNumber; return this; } public StoreHouseCardModelBuilder expirationDate(Date expirationDate) { this.expirationDate = expirationDate; return this; } public StoreHouseCardModelBuilder expirationDateFe(String expirationDateFe) { this.expirationDateFe = expirationDateFe; return this; } public StoreHouseCardModelBuilder productId(Integer productId) { this.productId = productId; return this; } public StoreHouseCardModelBuilder productCode(String productCode) { this.productCode = productCode; return this; } public StoreHouseCardModelBuilder productName(String productName) { this.productName = productName; return this; } public StoreHouseCardModelBuilder producer(String producer) { this.producer = producer; return this; } public StoreHouseCardModelBuilder registerNumber(String registerNumber) { this.registerNumber = registerNumber; return this; } public StoreHouseCardModelBuilder countryCode(String countryCode) { this.countryCode = countryCode; return this; } public StoreHouseCardModelBuilder brandCode(String brandCode) { this.brandCode = brandCode; return this; } public StoreHouseCardModelBuilder bidNumber(String bidNumber) { this.bidNumber = bidNumber; return this; } public StoreHouseCardModelBuilder bidGroup(String bidGroup) { this.bidGroup = bidGroup; return this; } public StoreHouseCardModelBuilder bidYear(String bidYear) { this.bidYear = bidYear; return this; } public StoreHouseCardModelBuilder bidPackage(String bidPackage) { this.bidPackage = bidPackage; return this; } public StoreHouseCardModelBuilder packageCode(String packageCode) { this.packageCode = packageCode; return this; } public StoreHouseCardModelBuilder productType(String productType) { this.productType = productType; return this; } public StoreHouseCardModelBuilder volume(String volume) { this.volume = volume; return this; } public StoreHouseCardModelBuilder usageProduct(String usageProduct) { this.usageProduct = usageProduct; return this; } public StoreHouseCardModelBuilder unit(String unit) { this.unit = unit; return this; } public StoreHouseCardModelBuilder concentration(String concentration) { this.concentration = concentration; return this; } public StoreHouseCardModelBuilder qty(Integer qty) { this.qty = qty; return this; } public StoreHouseCardModelBuilder qtyLock(Integer qtyLock) { this.qtyLock = qtyLock; return this; } public StoreHouseCardModelBuilder qtyAvailable(Integer qtyAvailable) { this.qtyAvailable = qtyAvailable; return this; } public StoreHouseCardModelBuilder qtyBegin(Integer qtyBegin) { this.qtyBegin = qtyBegin; return this; } public StoreHouseCardModelBuilder qtyImport(Integer qtyImport) { this.qtyImport = qtyImport; return this; } public StoreHouseCardModelBuilder vat(Integer vat) { this.vat = vat; return this; } public StoreHouseCardModelBuilder qtyExport(Integer qtyExport) { this.qtyExport = qtyExport; return this; } public StoreHouseCardModelBuilder qtyEnd(Integer qtyEnd) { this.qtyEnd = qtyEnd; return this; } public StoreHouseCardModelBuilder price(Double price) { this.price = price; return this; } public StoreHouseCardModelBuilder priceSelling(Double priceSelling) { this.priceSelling = priceSelling; return this; } public StoreHouseCardModelBuilder priceInput(Double priceInput) { this.priceInput = priceInput; return this; } public StoreHouseCardModelBuilder priceRequest(Double priceRequest) { this.priceRequest = priceRequest; return this; } public StoreHouseCardModelBuilder priceHospital(Double priceHospital) { this.priceHospital = priceHospital; return this; } public StoreHouseCardModelBuilder priceIns(Double priceIns) { this.priceIns = priceIns; return this; } public StoreHouseCardModelBuilder totalPrice(Double totalPrice) { this.totalPrice = totalPrice; return this; } public StoreHouseCardModelBuilder note(String note) { this.note = note; return this; } public StoreHouseCardModelBuilder activeIng(String activeIng) { this.activeIng = activeIng; return this; } public StoreHouseCardModelBuilder orderDetailId(Integer orderDetailId) { this.orderDetailId = orderDetailId; return this; } public StoreHouseCardModelBuilder barcode(String barcode) { this.barcode = barcode; return this; } public StoreHouseCardModelBuilder totalRecord(Integer totalRecord) { this.totalRecord = totalRecord; return this; } public StoreHouseCardModelBuilder colorCode(String colorCode) { this.colorCode = colorCode; return this; } public StoreHouseCardModelBuilder children(List<StoreHouseCardModel> children) { this.children = children; return this; } public StoreHouseCardModel build() { return new StoreHouseCardModel(this.stt, this.invenId, this.storehouseId, this.createdAt, this.storehouseName, this.orderId, this.orderCode, this.batchNumber, this.expirationDate, this.expirationDateFe, this.productId, this.productCode, this.productName, this.producer, this.registerNumber, this.countryCode, this.brandCode, this.bidNumber, this.bidGroup, this.bidYear, this.bidPackage, this.packageCode, this.productType, this.volume, this.usageProduct, this.unit, this.concentration, this.qty, this.qtyLock, this.qtyAvailable, this.qtyBegin, this.qtyImport, this.vat, this.qtyExport, this.qtyEnd, this.price, this.priceSelling, this.priceInput, this.priceRequest, this.priceHospital, this.priceIns, this.totalPrice, this.note, this.activeIng, this.orderDetailId, this.barcode, this.totalRecord, this.colorCode, this.children); } public String toString() { return "StoreHouseCardModel.StoreHouseCardModelBuilder(stt=" + this.stt + ", invenId=" + this.invenId + ", storehouseId=" + this.storehouseId + ", createdAt=" + this.createdAt + ", storehouseName=" + this.storehouseName + ", orderId=" + this.orderId + ", orderCode=" + this.orderCode + ", batchNumber=" + this.batchNumber + ", expirationDate=" + this.expirationDate + ", expirationDateFe=" + this.expirationDateFe + ", productId=" + this.productId + ", productCode=" + this.productCode + ", productName=" + this.productName + ", producer=" + this.producer + ", registerNumber=" + this.registerNumber + ", countryCode=" + this.countryCode + ", brandCode=" + this.brandCode + ", bidNumber=" + this.bidNumber + ", bidGroup=" + this.bidGroup + ", bidYear=" + this.bidYear + ", bidPackage=" + this.bidPackage + ", packageCode=" + this.packageCode + ", productType=" + this.productType + ", volume=" + this.volume + ", usageProduct=" + this.usageProduct + ", unit=" + this.unit + ", concentration=" + this.concentration + ", qty=" + this.qty + ", qtyLock=" + this.qtyLock + ", qtyAvailable=" + this.qtyAvailable + ", qtyBegin=" + this.qtyBegin + ", qtyImport=" + this.qtyImport + ", vat=" + this.vat + ", qtyExport=" + this.qtyExport + ", qtyEnd=" + this.qtyEnd + ", price=" + this.price + ", priceSelling=" + this.priceSelling + ", priceInput=" + this.priceInput + ", priceRequest=" + this.priceRequest + ", priceHospital=" + this.priceHospital + ", priceIns=" + this.priceIns + ", totalPrice=" + this.totalPrice + ", note=" + this.note + ", activeIng=" + this.activeIng + ", orderDetailId=" + this.orderDetailId + ", barcode=" + this.barcode + ", totalRecord=" + this.totalRecord + ", colorCode=" + this.colorCode + ", children=" + this.children + ")"; } } public StoreHouseCardModel(Integer stt, Integer invenId, Integer storehouseId, Date createdAt, String storehouseName, Integer orderId, String orderCode, String batchNumber, Date expirationDate, String expirationDateFe, Integer productId, String productCode, String productName, String producer, String registerNumber, String countryCode, String brandCode, String bidNumber, String bidGroup, String bidYear, String bidPackage, String packageCode, String productType, String volume, String usageProduct, String unit, String concentration, Integer qty, Integer qtyLock, Integer qtyAvailable, Integer qtyBegin, Integer qtyImport, Integer vat, Integer qtyExport, Integer qtyEnd, Double price, Double priceSelling, Double priceInput, Double priceRequest, Double priceHospital, Double priceIns, Double totalPrice, String note, String activeIng, Integer orderDetailId, String barcode, Integer totalRecord, String colorCode, List<StoreHouseCardModel> children) {
/* 13 */     this.stt = stt; this.invenId = invenId; this.storehouseId = storehouseId; this.createdAt = createdAt; this.storehouseName = storehouseName; this.orderId = orderId; this.orderCode = orderCode; this.batchNumber = batchNumber; this.expirationDate = expirationDate; this.expirationDateFe = expirationDateFe; this.productId = productId; this.productCode = productCode; this.productName = productName; this.producer = producer; this.registerNumber = registerNumber; this.countryCode = countryCode; this.brandCode = brandCode; this.bidNumber = bidNumber; this.bidGroup = bidGroup; this.bidYear = bidYear; this.bidPackage = bidPackage; this.packageCode = packageCode; this.productType = productType; this.volume = volume; this.usageProduct = usageProduct; this.unit = unit; this.concentration = concentration; this.qty = qty; this.qtyLock = qtyLock; this.qtyAvailable = qtyAvailable; this.qtyBegin = qtyBegin; this.qtyImport = qtyImport; this.vat = vat; this.qtyExport = qtyExport; this.qtyEnd = qtyEnd; this.price = price; this.priceSelling = priceSelling; this.priceInput = priceInput; this.priceRequest = priceRequest; this.priceHospital = priceHospital; this.priceIns = priceIns; this.totalPrice = totalPrice; this.note = note; this.activeIng = activeIng; this.orderDetailId = orderDetailId; this.barcode = barcode; this.totalRecord = totalRecord; this.colorCode = colorCode; this.children = children;
/*    */   } public StoreHouseCardModel() {}
/* 15 */   public void setStt(Integer stt) { this.stt = stt; } public void setInvenId(Integer invenId) { this.invenId = invenId; } public void setStorehouseId(Integer storehouseId) { this.storehouseId = storehouseId; } public void setCreatedAt(Date createdAt) { this.createdAt = createdAt; } public void setStorehouseName(String storehouseName) { this.storehouseName = storehouseName; } public void setOrderId(Integer orderId) { this.orderId = orderId; } public void setOrderCode(String orderCode) { this.orderCode = orderCode; } public void setBatchNumber(String batchNumber) { this.batchNumber = batchNumber; } public void setExpirationDate(Date expirationDate) { this.expirationDate = expirationDate; } public void setExpirationDateFe(String expirationDateFe) { this.expirationDateFe = expirationDateFe; } public void setProductId(Integer productId) { this.productId = productId; } public void setProductCode(String productCode) { this.productCode = productCode; } public void setProductName(String productName) { this.productName = productName; } public void setProducer(String producer) { this.producer = producer; } public void setRegisterNumber(String registerNumber) { this.registerNumber = registerNumber; } public void setCountryCode(String countryCode) { this.countryCode = countryCode; } public void setBrandCode(String brandCode) { this.brandCode = brandCode; } public void setBidNumber(String bidNumber) { this.bidNumber = bidNumber; } public void setBidGroup(String bidGroup) { this.bidGroup = bidGroup; } public void setBidYear(String bidYear) { this.bidYear = bidYear; } public void setBidPackage(String bidPackage) { this.bidPackage = bidPackage; } public void setPackageCode(String packageCode) { this.packageCode = packageCode; } public void setProductType(String productType) { this.productType = productType; } public void setVolume(String volume) { this.volume = volume; } public void setUsageProduct(String usageProduct) { this.usageProduct = usageProduct; } public void setUnit(String unit) { this.unit = unit; } public void setConcentration(String concentration) { this.concentration = concentration; } public void setQty(Integer qty) { this.qty = qty; } public void setQtyLock(Integer qtyLock) { this.qtyLock = qtyLock; } public void setQtyAvailable(Integer qtyAvailable) { this.qtyAvailable = qtyAvailable; } public void setQtyBegin(Integer qtyBegin) { this.qtyBegin = qtyBegin; } public void setQtyImport(Integer qtyImport) { this.qtyImport = qtyImport; } public void setVat(Integer vat) { this.vat = vat; } public void setQtyExport(Integer qtyExport) { this.qtyExport = qtyExport; } public void setQtyEnd(Integer qtyEnd) { this.qtyEnd = qtyEnd; } public void setPrice(Double price) { this.price = price; } public void setPriceSelling(Double priceSelling) { this.priceSelling = priceSelling; } public void setPriceInput(Double priceInput) { this.priceInput = priceInput; } public void setPriceRequest(Double priceRequest) { this.priceRequest = priceRequest; } public void setPriceHospital(Double priceHospital) { this.priceHospital = priceHospital; } public void setPriceIns(Double priceIns) { this.priceIns = priceIns; } public void setTotalPrice(Double totalPrice) { this.totalPrice = totalPrice; } public void setNote(String note) { this.note = note; } public void setActiveIng(String activeIng) { this.activeIng = activeIng; } public void setOrderDetailId(Integer orderDetailId) { this.orderDetailId = orderDetailId; } public void setBarcode(String barcode) { this.barcode = barcode; } public void setTotalRecord(Integer totalRecord) { this.totalRecord = totalRecord; } public void setColorCode(String colorCode) { this.colorCode = colorCode; } public void setChildren(List<StoreHouseCardModel> children) { this.children = children; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof StoreHouseCardModel)) return false;  StoreHouseCardModel other = (StoreHouseCardModel)o; if (!other.canEqual(this)) return false;  Object this$stt = getStt(), other$stt = other.getStt(); if ((this$stt == null) ? (other$stt != null) : !this$stt.equals(other$stt)) return false;  Object this$invenId = getInvenId(), other$invenId = other.getInvenId(); if ((this$invenId == null) ? (other$invenId != null) : !this$invenId.equals(other$invenId)) return false;  Object this$storehouseId = getStorehouseId(), other$storehouseId = other.getStorehouseId(); if ((this$storehouseId == null) ? (other$storehouseId != null) : !this$storehouseId.equals(other$storehouseId)) return false;  Object this$createdAt = getCreatedAt(), other$createdAt = other.getCreatedAt(); if ((this$createdAt == null) ? (other$createdAt != null) : !this$createdAt.equals(other$createdAt)) return false;  Object this$storehouseName = getStorehouseName(), other$storehouseName = other.getStorehouseName(); if ((this$storehouseName == null) ? (other$storehouseName != null) : !this$storehouseName.equals(other$storehouseName)) return false;  Object this$orderId = getOrderId(), other$orderId = other.getOrderId(); if ((this$orderId == null) ? (other$orderId != null) : !this$orderId.equals(other$orderId)) return false;  Object this$orderCode = getOrderCode(), other$orderCode = other.getOrderCode(); if ((this$orderCode == null) ? (other$orderCode != null) : !this$orderCode.equals(other$orderCode)) return false;  Object this$batchNumber = getBatchNumber(), other$batchNumber = other.getBatchNumber(); if ((this$batchNumber == null) ? (other$batchNumber != null) : !this$batchNumber.equals(other$batchNumber)) return false;  Object this$expirationDate = getExpirationDate(), other$expirationDate = other.getExpirationDate(); if ((this$expirationDate == null) ? (other$expirationDate != null) : !this$expirationDate.equals(other$expirationDate)) return false;  Object this$expirationDateFe = getExpirationDateFe(), other$expirationDateFe = other.getExpirationDateFe(); if ((this$expirationDateFe == null) ? (other$expirationDateFe != null) : !this$expirationDateFe.equals(other$expirationDateFe)) return false;  Object this$productId = getProductId(), other$productId = other.getProductId(); if ((this$productId == null) ? (other$productId != null) : !this$productId.equals(other$productId)) return false;  Object this$productCode = getProductCode(), other$productCode = other.getProductCode(); if ((this$productCode == null) ? (other$productCode != null) : !this$productCode.equals(other$productCode)) return false;  Object this$productName = getProductName(), other$productName = other.getProductName(); if ((this$productName == null) ? (other$productName != null) : !this$productName.equals(other$productName)) return false;  Object this$producer = getProducer(), other$producer = other.getProducer(); if ((this$producer == null) ? (other$producer != null) : !this$producer.equals(other$producer)) return false;  Object this$registerNumber = getRegisterNumber(), other$registerNumber = other.getRegisterNumber(); if ((this$registerNumber == null) ? (other$registerNumber != null) : !this$registerNumber.equals(other$registerNumber)) return false;  Object this$countryCode = getCountryCode(), other$countryCode = other.getCountryCode(); if ((this$countryCode == null) ? (other$countryCode != null) : !this$countryCode.equals(other$countryCode)) return false;  Object this$brandCode = getBrandCode(), other$brandCode = other.getBrandCode(); if ((this$brandCode == null) ? (other$brandCode != null) : !this$brandCode.equals(other$brandCode)) return false;  Object this$bidNumber = getBidNumber(), other$bidNumber = other.getBidNumber(); if ((this$bidNumber == null) ? (other$bidNumber != null) : !this$bidNumber.equals(other$bidNumber)) return false;  Object this$bidGroup = getBidGroup(), other$bidGroup = other.getBidGroup(); if ((this$bidGroup == null) ? (other$bidGroup != null) : !this$bidGroup.equals(other$bidGroup)) return false;  Object this$bidYear = getBidYear(), other$bidYear = other.getBidYear(); if ((this$bidYear == null) ? (other$bidYear != null) : !this$bidYear.equals(other$bidYear)) return false;  Object this$bidPackage = getBidPackage(), other$bidPackage = other.getBidPackage(); if ((this$bidPackage == null) ? (other$bidPackage != null) : !this$bidPackage.equals(other$bidPackage)) return false;  Object this$packageCode = getPackageCode(), other$packageCode = other.getPackageCode(); if ((this$packageCode == null) ? (other$packageCode != null) : !this$packageCode.equals(other$packageCode)) return false;  Object this$productType = getProductType(), other$productType = other.getProductType(); if ((this$productType == null) ? (other$productType != null) : !this$productType.equals(other$productType)) return false;  Object this$volume = getVolume(), other$volume = other.getVolume(); if ((this$volume == null) ? (other$volume != null) : !this$volume.equals(other$volume)) return false;  Object this$usageProduct = getUsageProduct(), other$usageProduct = other.getUsageProduct(); if ((this$usageProduct == null) ? (other$usageProduct != null) : !this$usageProduct.equals(other$usageProduct)) return false;  Object this$unit = getUnit(), other$unit = other.getUnit(); if ((this$unit == null) ? (other$unit != null) : !this$unit.equals(other$unit)) return false;  Object this$concentration = getConcentration(), other$concentration = other.getConcentration(); if ((this$concentration == null) ? (other$concentration != null) : !this$concentration.equals(other$concentration)) return false;  Object this$qty = getQty(), other$qty = other.getQty(); if ((this$qty == null) ? (other$qty != null) : !this$qty.equals(other$qty)) return false;  Object this$qtyLock = getQtyLock(), other$qtyLock = other.getQtyLock(); if ((this$qtyLock == null) ? (other$qtyLock != null) : !this$qtyLock.equals(other$qtyLock)) return false;  Object this$qtyAvailable = getQtyAvailable(), other$qtyAvailable = other.getQtyAvailable(); if ((this$qtyAvailable == null) ? (other$qtyAvailable != null) : !this$qtyAvailable.equals(other$qtyAvailable)) return false;  Object this$qtyBegin = getQtyBegin(), other$qtyBegin = other.getQtyBegin(); if ((this$qtyBegin == null) ? (other$qtyBegin != null) : !this$qtyBegin.equals(other$qtyBegin)) return false;  Object this$qtyImport = getQtyImport(), other$qtyImport = other.getQtyImport(); if ((this$qtyImport == null) ? (other$qtyImport != null) : !this$qtyImport.equals(other$qtyImport)) return false;  Object this$vat = getVat(), other$vat = other.getVat(); if ((this$vat == null) ? (other$vat != null) : !this$vat.equals(other$vat)) return false;  Object this$qtyExport = getQtyExport(), other$qtyExport = other.getQtyExport(); if ((this$qtyExport == null) ? (other$qtyExport != null) : !this$qtyExport.equals(other$qtyExport)) return false;  Object this$qtyEnd = getQtyEnd(), other$qtyEnd = other.getQtyEnd(); if ((this$qtyEnd == null) ? (other$qtyEnd != null) : !this$qtyEnd.equals(other$qtyEnd)) return false;  Object this$price = getPrice(), other$price = other.getPrice(); if ((this$price == null) ? (other$price != null) : !this$price.equals(other$price)) return false;  Object this$priceSelling = getPriceSelling(), other$priceSelling = other.getPriceSelling(); if ((this$priceSelling == null) ? (other$priceSelling != null) : !this$priceSelling.equals(other$priceSelling)) return false;  Object this$priceInput = getPriceInput(), other$priceInput = other.getPriceInput(); if ((this$priceInput == null) ? (other$priceInput != null) : !this$priceInput.equals(other$priceInput)) return false;  Object this$priceRequest = getPriceRequest(), other$priceRequest = other.getPriceRequest(); if ((this$priceRequest == null) ? (other$priceRequest != null) : !this$priceRequest.equals(other$priceRequest)) return false;  Object this$priceHospital = getPriceHospital(), other$priceHospital = other.getPriceHospital(); if ((this$priceHospital == null) ? (other$priceHospital != null) : !this$priceHospital.equals(other$priceHospital)) return false;  Object this$priceIns = getPriceIns(), other$priceIns = other.getPriceIns(); if ((this$priceIns == null) ? (other$priceIns != null) : !this$priceIns.equals(other$priceIns)) return false;  Object this$totalPrice = getTotalPrice(), other$totalPrice = other.getTotalPrice(); if ((this$totalPrice == null) ? (other$totalPrice != null) : !this$totalPrice.equals(other$totalPrice)) return false;  Object this$note = getNote(), other$note = other.getNote(); if ((this$note == null) ? (other$note != null) : !this$note.equals(other$note)) return false;  Object this$activeIng = getActiveIng(), other$activeIng = other.getActiveIng(); if ((this$activeIng == null) ? (other$activeIng != null) : !this$activeIng.equals(other$activeIng)) return false;  Object this$orderDetailId = getOrderDetailId(), other$orderDetailId = other.getOrderDetailId(); if ((this$orderDetailId == null) ? (other$orderDetailId != null) : !this$orderDetailId.equals(other$orderDetailId)) return false;  Object this$barcode = getBarcode(), other$barcode = other.getBarcode(); if ((this$barcode == null) ? (other$barcode != null) : !this$barcode.equals(other$barcode)) return false;  Object this$totalRecord = getTotalRecord(), other$totalRecord = other.getTotalRecord(); if ((this$totalRecord == null) ? (other$totalRecord != null) : !this$totalRecord.equals(other$totalRecord)) return false;  Object this$colorCode = getColorCode(), other$colorCode = other.getColorCode(); if ((this$colorCode == null) ? (other$colorCode != null) : !this$colorCode.equals(other$colorCode)) return false;  Object<StoreHouseCardModel> this$children = (Object<StoreHouseCardModel>)getChildren(), other$children = (Object<StoreHouseCardModel>)other.getChildren(); return !((this$children == null) ? (other$children != null) : !this$children.equals(other$children)); } protected boolean canEqual(Object other) { return other instanceof StoreHouseCardModel; } public int hashCode() { int PRIME = 59; result = 1; Object $stt = getStt(); result = result * 59 + (($stt == null) ? 43 : $stt.hashCode()); Object $invenId = getInvenId(); result = result * 59 + (($invenId == null) ? 43 : $invenId.hashCode()); Object $storehouseId = getStorehouseId(); result = result * 59 + (($storehouseId == null) ? 43 : $storehouseId.hashCode()); Object $createdAt = getCreatedAt(); result = result * 59 + (($createdAt == null) ? 43 : $createdAt.hashCode()); Object $storehouseName = getStorehouseName(); result = result * 59 + (($storehouseName == null) ? 43 : $storehouseName.hashCode()); Object $orderId = getOrderId(); result = result * 59 + (($orderId == null) ? 43 : $orderId.hashCode()); Object $orderCode = getOrderCode(); result = result * 59 + (($orderCode == null) ? 43 : $orderCode.hashCode()); Object $batchNumber = getBatchNumber(); result = result * 59 + (($batchNumber == null) ? 43 : $batchNumber.hashCode()); Object $expirationDate = getExpirationDate(); result = result * 59 + (($expirationDate == null) ? 43 : $expirationDate.hashCode()); Object $expirationDateFe = getExpirationDateFe(); result = result * 59 + (($expirationDateFe == null) ? 43 : $expirationDateFe.hashCode()); Object $productId = getProductId(); result = result * 59 + (($productId == null) ? 43 : $productId.hashCode()); Object $productCode = getProductCode(); result = result * 59 + (($productCode == null) ? 43 : $productCode.hashCode()); Object $productName = getProductName(); result = result * 59 + (($productName == null) ? 43 : $productName.hashCode()); Object $producer = getProducer(); result = result * 59 + (($producer == null) ? 43 : $producer.hashCode()); Object $registerNumber = getRegisterNumber(); result = result * 59 + (($registerNumber == null) ? 43 : $registerNumber.hashCode()); Object $countryCode = getCountryCode(); result = result * 59 + (($countryCode == null) ? 43 : $countryCode.hashCode()); Object $brandCode = getBrandCode(); result = result * 59 + (($brandCode == null) ? 43 : $brandCode.hashCode()); Object $bidNumber = getBidNumber(); result = result * 59 + (($bidNumber == null) ? 43 : $bidNumber.hashCode()); Object $bidGroup = getBidGroup(); result = result * 59 + (($bidGroup == null) ? 43 : $bidGroup.hashCode()); Object $bidYear = getBidYear(); result = result * 59 + (($bidYear == null) ? 43 : $bidYear.hashCode()); Object $bidPackage = getBidPackage(); result = result * 59 + (($bidPackage == null) ? 43 : $bidPackage.hashCode()); Object $packageCode = getPackageCode(); result = result * 59 + (($packageCode == null) ? 43 : $packageCode.hashCode()); Object $productType = getProductType(); result = result * 59 + (($productType == null) ? 43 : $productType.hashCode()); Object $volume = getVolume(); result = result * 59 + (($volume == null) ? 43 : $volume.hashCode()); Object $usageProduct = getUsageProduct(); result = result * 59 + (($usageProduct == null) ? 43 : $usageProduct.hashCode()); Object $unit = getUnit(); result = result * 59 + (($unit == null) ? 43 : $unit.hashCode()); Object $concentration = getConcentration(); result = result * 59 + (($concentration == null) ? 43 : $concentration.hashCode()); Object $qty = getQty(); result = result * 59 + (($qty == null) ? 43 : $qty.hashCode()); Object $qtyLock = getQtyLock(); result = result * 59 + (($qtyLock == null) ? 43 : $qtyLock.hashCode()); Object $qtyAvailable = getQtyAvailable(); result = result * 59 + (($qtyAvailable == null) ? 43 : $qtyAvailable.hashCode()); Object $qtyBegin = getQtyBegin(); result = result * 59 + (($qtyBegin == null) ? 43 : $qtyBegin.hashCode()); Object $qtyImport = getQtyImport(); result = result * 59 + (($qtyImport == null) ? 43 : $qtyImport.hashCode()); Object $vat = getVat(); result = result * 59 + (($vat == null) ? 43 : $vat.hashCode()); Object $qtyExport = getQtyExport(); result = result * 59 + (($qtyExport == null) ? 43 : $qtyExport.hashCode()); Object $qtyEnd = getQtyEnd(); result = result * 59 + (($qtyEnd == null) ? 43 : $qtyEnd.hashCode()); Object $price = getPrice(); result = result * 59 + (($price == null) ? 43 : $price.hashCode()); Object $priceSelling = getPriceSelling(); result = result * 59 + (($priceSelling == null) ? 43 : $priceSelling.hashCode()); Object $priceInput = getPriceInput(); result = result * 59 + (($priceInput == null) ? 43 : $priceInput.hashCode()); Object $priceRequest = getPriceRequest(); result = result * 59 + (($priceRequest == null) ? 43 : $priceRequest.hashCode()); Object $priceHospital = getPriceHospital(); result = result * 59 + (($priceHospital == null) ? 43 : $priceHospital.hashCode()); Object $priceIns = getPriceIns(); result = result * 59 + (($priceIns == null) ? 43 : $priceIns.hashCode()); Object $totalPrice = getTotalPrice(); result = result * 59 + (($totalPrice == null) ? 43 : $totalPrice.hashCode()); Object $note = getNote(); result = result * 59 + (($note == null) ? 43 : $note.hashCode()); Object $activeIng = getActiveIng(); result = result * 59 + (($activeIng == null) ? 43 : $activeIng.hashCode()); Object $orderDetailId = getOrderDetailId(); result = result * 59 + (($orderDetailId == null) ? 43 : $orderDetailId.hashCode()); Object $barcode = getBarcode(); result = result * 59 + (($barcode == null) ? 43 : $barcode.hashCode()); Object $totalRecord = getTotalRecord(); result = result * 59 + (($totalRecord == null) ? 43 : $totalRecord.hashCode()); Object $colorCode = getColorCode(); result = result * 59 + (($colorCode == null) ? 43 : $colorCode.hashCode()); Object<StoreHouseCardModel> $children = (Object<StoreHouseCardModel>)getChildren(); return result * 59 + (($children == null) ? 43 : $children.hashCode()); } public String toString() { return "StoreHouseCardModel(stt=" + getStt() + ", invenId=" + getInvenId() + ", storehouseId=" + getStorehouseId() + ", createdAt=" + getCreatedAt() + ", storehouseName=" + getStorehouseName() + ", orderId=" + getOrderId() + ", orderCode=" + getOrderCode() + ", batchNumber=" + getBatchNumber() + ", expirationDate=" + getExpirationDate() + ", expirationDateFe=" + getExpirationDateFe() + ", productId=" + getProductId() + ", productCode=" + getProductCode() + ", productName=" + getProductName() + ", producer=" + getProducer() + ", registerNumber=" + getRegisterNumber() + ", countryCode=" + getCountryCode() + ", brandCode=" + getBrandCode() + ", bidNumber=" + getBidNumber() + ", bidGroup=" + getBidGroup() + ", bidYear=" + getBidYear() + ", bidPackage=" + getBidPackage() + ", packageCode=" + getPackageCode() + ", productType=" + getProductType() + ", volume=" + getVolume() + ", usageProduct=" + getUsageProduct() + ", unit=" + getUnit() + ", concentration=" + getConcentration() + ", qty=" + getQty() + ", qtyLock=" + getQtyLock() + ", qtyAvailable=" + getQtyAvailable() + ", qtyBegin=" + getQtyBegin() + ", qtyImport=" + getQtyImport() + ", vat=" + getVat() + ", qtyExport=" + getQtyExport() + ", qtyEnd=" + getQtyEnd() + ", price=" + getPrice() + ", priceSelling=" + getPriceSelling() + ", priceInput=" + getPriceInput() + ", priceRequest=" + getPriceRequest() + ", priceHospital=" + getPriceHospital() + ", priceIns=" + getPriceIns() + ", totalPrice=" + getTotalPrice() + ", note=" + getNote() + ", activeIng=" + getActiveIng() + ", orderDetailId=" + getOrderDetailId() + ", barcode=" + getBarcode() + ", totalRecord=" + getTotalRecord() + ", colorCode=" + getColorCode() + ", children=" + getChildren() + ")"; }
/*    */   
/* 17 */   public Integer getStt() { return this.stt; }
/* 18 */   public Integer getInvenId() { return this.invenId; }
/* 19 */   public Integer getStorehouseId() { return this.storehouseId; }
/* 20 */   public Date getCreatedAt() { return this.createdAt; }
/* 21 */   public String getStorehouseName() { return this.storehouseName; }
/* 22 */   public Integer getOrderId() { return this.orderId; }
/* 23 */   public String getOrderCode() { return this.orderCode; }
/* 24 */   public String getBatchNumber() { return this.batchNumber; }
/* 25 */   public Date getExpirationDate() { return this.expirationDate; }
/* 26 */   public String getExpirationDateFe() { return this.expirationDateFe; }
/* 27 */   public Integer getProductId() { return this.productId; }
/* 28 */   public String getProductCode() { return this.productCode; }
/* 29 */   public String getProductName() { return this.productName; }
/* 30 */   public String getProducer() { return this.producer; }
/* 31 */   public String getRegisterNumber() { return this.registerNumber; }
/* 32 */   public String getCountryCode() { return this.countryCode; }
/* 33 */   public String getBrandCode() { return this.brandCode; }
/* 34 */   public String getBidNumber() { return this.bidNumber; }
/* 35 */   public String getBidGroup() { return this.bidGroup; }
/* 36 */   public String getBidYear() { return this.bidYear; }
/* 37 */   public String getBidPackage() { return this.bidPackage; }
/* 38 */   public String getPackageCode() { return this.packageCode; }
/* 39 */   public String getProductType() { return this.productType; }
/* 40 */   public String getVolume() { return this.volume; }
/* 41 */   public String getUsageProduct() { return this.usageProduct; }
/* 42 */   public String getUnit() { return this.unit; }
/* 43 */   public String getConcentration() { return this.concentration; }
/* 44 */   public Integer getQty() { return this.qty; }
/* 45 */   public Integer getQtyLock() { return this.qtyLock; }
/* 46 */   public Integer getQtyAvailable() { return this.qtyAvailable; }
/* 47 */   public Integer getQtyBegin() { return this.qtyBegin; }
/* 48 */   public Integer getQtyImport() { return this.qtyImport; }
/* 49 */   public Integer getVat() { return this.vat; }
/* 50 */   public Integer getQtyExport() { return this.qtyExport; }
/* 51 */   public Integer getQtyEnd() { return this.qtyEnd; }
/* 52 */   public Double getPrice() { return this.price; }
/* 53 */   public Double getPriceSelling() { return this.priceSelling; }
/* 54 */   public Double getPriceInput() { return this.priceInput; }
/* 55 */   public Double getPriceRequest() { return this.priceRequest; }
/* 56 */   public Double getPriceHospital() { return this.priceHospital; }
/* 57 */   public Double getPriceIns() { return this.priceIns; }
/* 58 */   public Double getTotalPrice() { return this.totalPrice; }
/* 59 */   public String getNote() { return this.note; }
/* 60 */   public String getActiveIng() { return this.activeIng; }
/* 61 */   public Integer getOrderDetailId() { return this.orderDetailId; }
/* 62 */   public String getBarcode() { return this.barcode; }
/* 63 */   public Integer getTotalRecord() { return this.totalRecord; }
/* 64 */   public String getColorCode() { return this.colorCode; } public List<StoreHouseCardModel> getChildren() {
/* 65 */     return this.children;
/*    */   } }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Storehouse\Model\StoreHouseCardModel.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */