/*    */ package nencer.app.Modules.Localization.Model;public class LanguageTransResponse { private Integer id; private String langCode;
/*    */   private String langKey;
/*    */   private String filename;
/*    */   private String key;
/*    */   private String content;
/*    */   private String type;
/*    */   private Date createdAt;
/*    */   private Date updatedAt;
/*    */   private String updatedAtDis;
/*    */   private String createdAtDis;
/*    */   
/* 12 */   public void setId(Integer id) { this.id = id; } public void setLangCode(String langCode) { this.langCode = langCode; } public void setLangKey(String langKey) { this.langKey = langKey; } public void setFilename(String filename) { this.filename = filename; } public void setKey(String key) { this.key = key; } public void setContent(String content) { this.content = content; } public void setType(String type) { this.type = type; } public void setCreatedAt(Date createdAt) { this.createdAt = createdAt; } public void setUpdatedAt(Date updatedAt) { this.updatedAt = updatedAt; } public void setUpdatedAtDis(String updatedAtDis) { this.updatedAtDis = updatedAtDis; } public void setCreatedAtDis(String createdAtDis) { this.createdAtDis = createdAtDis; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof LanguageTransResponse)) return false;  LanguageTransResponse other = (LanguageTransResponse)o; if (!other.canEqual(this)) return false;  Object this$id = getId(), other$id = other.getId(); if ((this$id == null) ? (other$id != null) : !this$id.equals(other$id)) return false;  Object this$langCode = getLangCode(), other$langCode = other.getLangCode(); if ((this$langCode == null) ? (other$langCode != null) : !this$langCode.equals(other$langCode)) return false;  Object this$langKey = getLangKey(), other$langKey = other.getLangKey(); if ((this$langKey == null) ? (other$langKey != null) : !this$langKey.equals(other$langKey)) return false;  Object this$filename = getFilename(), other$filename = other.getFilename(); if ((this$filename == null) ? (other$filename != null) : !this$filename.equals(other$filename)) return false;  Object this$key = getKey(), other$key = other.getKey(); if ((this$key == null) ? (other$key != null) : !this$key.equals(other$key)) return false;  Object this$content = getContent(), other$content = other.getContent(); if ((this$content == null) ? (other$content != null) : !this$content.equals(other$content)) return false;  Object this$type = getType(), other$type = other.getType(); if ((this$type == null) ? (other$type != null) : !this$type.equals(other$type)) return false;  Object this$createdAt = getCreatedAt(), other$createdAt = other.getCreatedAt(); if ((this$createdAt == null) ? (other$createdAt != null) : !this$createdAt.equals(other$createdAt)) return false;  Object this$updatedAt = getUpdatedAt(), other$updatedAt = other.getUpdatedAt(); if ((this$updatedAt == null) ? (other$updatedAt != null) : !this$updatedAt.equals(other$updatedAt)) return false;  Object this$updatedAtDis = getUpdatedAtDis(), other$updatedAtDis = other.getUpdatedAtDis(); if ((this$updatedAtDis == null) ? (other$updatedAtDis != null) : !this$updatedAtDis.equals(other$updatedAtDis)) return false;  Object this$createdAtDis = getCreatedAtDis(), other$createdAtDis = other.getCreatedAtDis(); return !((this$createdAtDis == null) ? (other$createdAtDis != null) : !this$createdAtDis.equals(other$createdAtDis)); } protected boolean canEqual(Object other) { return other instanceof LanguageTransResponse; } public int hashCode() { int PRIME = 59; result = 1; Object $id = getId(); result = result * 59 + (($id == null) ? 43 : $id.hashCode()); Object $langCode = getLangCode(); result = result * 59 + (($langCode == null) ? 43 : $langCode.hashCode()); Object $langKey = getLangKey(); result = result * 59 + (($langKey == null) ? 43 : $langKey.hashCode()); Object $filename = getFilename(); result = result * 59 + (($filename == null) ? 43 : $filename.hashCode()); Object $key = getKey(); result = result * 59 + (($key == null) ? 43 : $key.hashCode()); Object $content = getContent(); result = result * 59 + (($content == null) ? 43 : $content.hashCode()); Object $type = getType(); result = result * 59 + (($type == null) ? 43 : $type.hashCode()); Object $createdAt = getCreatedAt(); result = result * 59 + (($createdAt == null) ? 43 : $createdAt.hashCode()); Object $updatedAt = getUpdatedAt(); result = result * 59 + (($updatedAt == null) ? 43 : $updatedAt.hashCode()); Object $updatedAtDis = getUpdatedAtDis(); result = result * 59 + (($updatedAtDis == null) ? 43 : $updatedAtDis.hashCode()); Object $createdAtDis = getCreatedAtDis(); return result * 59 + (($createdAtDis == null) ? 43 : $createdAtDis.hashCode()); } public String toString() { return "LanguageTransResponse(id=" + getId() + ", langCode=" + getLangCode() + ", langKey=" + getLangKey() + ", filename=" + getFilename() + ", key=" + getKey() + ", content=" + getContent() + ", type=" + getType() + ", createdAt=" + getCreatedAt() + ", updatedAt=" + getUpdatedAt() + ", updatedAtDis=" + getUpdatedAtDis() + ", createdAtDis=" + getCreatedAtDis() + ")"; }
/* 13 */   public static LanguageTransResponseBuilder builder() { return new LanguageTransResponseBuilder(); } public static class LanguageTransResponseBuilder { private Integer id; private String langCode; private String langKey; private String filename; private String key; public LanguageTransResponseBuilder id(Integer id) { this.id = id; return this; } private String content; private String type; private Date createdAt; private Date updatedAt; private String updatedAtDis; private String createdAtDis; public LanguageTransResponseBuilder langCode(String langCode) { this.langCode = langCode; return this; } public LanguageTransResponseBuilder langKey(String langKey) { this.langKey = langKey; return this; } public LanguageTransResponseBuilder filename(String filename) { this.filename = filename; return this; } public LanguageTransResponseBuilder key(String key) { this.key = key; return this; } public LanguageTransResponseBuilder content(String content) { this.content = content; return this; } public LanguageTransResponseBuilder type(String type) { this.type = type; return this; } public LanguageTransResponseBuilder createdAt(Date createdAt) { this.createdAt = createdAt; return this; } public LanguageTransResponseBuilder updatedAt(Date updatedAt) { this.updatedAt = updatedAt; return this; } public LanguageTransResponseBuilder updatedAtDis(String updatedAtDis) { this.updatedAtDis = updatedAtDis; return this; } public LanguageTransResponseBuilder createdAtDis(String createdAtDis) { this.createdAtDis = createdAtDis; return this; } public LanguageTransResponse build() { return new LanguageTransResponse(this.id, this.langCode, this.langKey, this.filename, this.key, this.content, this.type, this.createdAt, this.updatedAt, this.updatedAtDis, this.createdAtDis); } public String toString() { return "LanguageTransResponse.LanguageTransResponseBuilder(id=" + this.id + ", langCode=" + this.langCode + ", langKey=" + this.langKey + ", filename=" + this.filename + ", key=" + this.key + ", content=" + this.content + ", type=" + this.type + ", createdAt=" + this.createdAt + ", updatedAt=" + this.updatedAt + ", updatedAtDis=" + this.updatedAtDis + ", createdAtDis=" + this.createdAtDis + ")"; }
/*    */      } public LanguageTransResponse() {} public LanguageTransResponse(Integer id, String langCode, String langKey, String filename, String key, String content, String type, Date createdAt, Date updatedAt, String updatedAtDis, String createdAtDis) {
/* 15 */     this.id = id; this.langCode = langCode; this.langKey = langKey; this.filename = filename; this.key = key; this.content = content; this.type = type; this.createdAt = createdAt; this.updatedAt = updatedAt; this.updatedAtDis = updatedAtDis; this.createdAtDis = createdAtDis;
/*    */   }
/* 17 */   public Integer getId() { return this.id; }
/* 18 */   public String getLangCode() { return this.langCode; }
/* 19 */   public String getLangKey() { return this.langKey; }
/* 20 */   public String getFilename() { return this.filename; }
/* 21 */   public String getKey() { return this.key; }
/* 22 */   public String getContent() { return this.content; }
/* 23 */   public String getType() { return this.type; }
/* 24 */   public Date getCreatedAt() { return this.createdAt; } public Date getUpdatedAt() {
/* 25 */     return this.updatedAt;
/*    */   }
/*    */ 
/*    */   
/*    */   public String getUpdatedAtDis() {
/* 30 */     if (this.updatedAt == null) return ""; 
/* 31 */     return ApiHelper.dateToString(this.updatedAt);
/*    */   }
/*    */   
/*    */   public String getCreatedAtDis() {
/* 35 */     if (this.createdAt == null) return ""; 
/* 36 */     return ApiHelper.dateToString(this.createdAt);
/*    */   } }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Localization\Model\LanguageTransResponse.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */