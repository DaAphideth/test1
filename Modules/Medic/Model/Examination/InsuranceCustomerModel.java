/*    */ package nencer.app.Modules.Medic.Model.Examination;
/*    */ @JsonIgnoreProperties(ignoreUnknown = true)
/*    */ public class InsuranceCustomerModel { private Integer id; private String customerType;
/*    */   private String insuranceNumber;
/*    */   
/*  6 */   public void setId(Integer id) { this.id = id; } private Integer benefitRate; private String insuranceLine; private Integer actualBenefits; private Double minimumSalaryMonth; public void setCustomerType(String customerType) { this.customerType = customerType; } public void setInsuranceNumber(String insuranceNumber) { this.insuranceNumber = insuranceNumber; } public void setBenefitRate(Integer benefitRate) { this.benefitRate = benefitRate; } public void setInsuranceLine(String insuranceLine) { this.insuranceLine = insuranceLine; } public void setActualBenefits(Integer actualBenefits) { this.actualBenefits = actualBenefits; } public void setMinimumSalaryMonth(Double minimumSalaryMonth) { this.minimumSalaryMonth = minimumSalaryMonth; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof InsuranceCustomerModel)) return false;  InsuranceCustomerModel other = (InsuranceCustomerModel)o; if (!other.canEqual(this)) return false;  Object this$id = getId(), other$id = other.getId(); if ((this$id == null) ? (other$id != null) : !this$id.equals(other$id)) return false;  Object this$customerType = getCustomerType(), other$customerType = other.getCustomerType(); if ((this$customerType == null) ? (other$customerType != null) : !this$customerType.equals(other$customerType)) return false;  Object this$insuranceNumber = getInsuranceNumber(), other$insuranceNumber = other.getInsuranceNumber(); if ((this$insuranceNumber == null) ? (other$insuranceNumber != null) : !this$insuranceNumber.equals(other$insuranceNumber)) return false;  Object this$benefitRate = getBenefitRate(), other$benefitRate = other.getBenefitRate(); if ((this$benefitRate == null) ? (other$benefitRate != null) : !this$benefitRate.equals(other$benefitRate)) return false;  Object this$insuranceLine = getInsuranceLine(), other$insuranceLine = other.getInsuranceLine(); if ((this$insuranceLine == null) ? (other$insuranceLine != null) : !this$insuranceLine.equals(other$insuranceLine)) return false;  Object this$actualBenefits = getActualBenefits(), other$actualBenefits = other.getActualBenefits(); if ((this$actualBenefits == null) ? (other$actualBenefits != null) : !this$actualBenefits.equals(other$actualBenefits)) return false;  Object this$minimumSalaryMonth = getMinimumSalaryMonth(), other$minimumSalaryMonth = other.getMinimumSalaryMonth(); return !((this$minimumSalaryMonth == null) ? (other$minimumSalaryMonth != null) : !this$minimumSalaryMonth.equals(other$minimumSalaryMonth)); } protected boolean canEqual(Object other) { return other instanceof InsuranceCustomerModel; } public int hashCode() { int PRIME = 59; result = 1; Object $id = getId(); result = result * 59 + (($id == null) ? 43 : $id.hashCode()); Object $customerType = getCustomerType(); result = result * 59 + (($customerType == null) ? 43 : $customerType.hashCode()); Object $insuranceNumber = getInsuranceNumber(); result = result * 59 + (($insuranceNumber == null) ? 43 : $insuranceNumber.hashCode()); Object $benefitRate = getBenefitRate(); result = result * 59 + (($benefitRate == null) ? 43 : $benefitRate.hashCode()); Object $insuranceLine = getInsuranceLine(); result = result * 59 + (($insuranceLine == null) ? 43 : $insuranceLine.hashCode()); Object $actualBenefits = getActualBenefits(); result = result * 59 + (($actualBenefits == null) ? 43 : $actualBenefits.hashCode()); Object $minimumSalaryMonth = getMinimumSalaryMonth(); return result * 59 + (($minimumSalaryMonth == null) ? 43 : $minimumSalaryMonth.hashCode()); } public String toString() { return "InsuranceCustomerModel(id=" + getId() + ", customerType=" + getCustomerType() + ", insuranceNumber=" + getInsuranceNumber() + ", benefitRate=" + getBenefitRate() + ", insuranceLine=" + getInsuranceLine() + ", actualBenefits=" + getActualBenefits() + ", minimumSalaryMonth=" + getMinimumSalaryMonth() + ")"; }
/*    */ 
/*    */   
/*  9 */   public Integer getId() { return this.id; }
/* 10 */   public String getCustomerType() { return this.customerType; }
/* 11 */   public String getInsuranceNumber() { return this.insuranceNumber; }
/* 12 */   public Integer getBenefitRate() { return this.benefitRate; }
/* 13 */   public String getInsuranceLine() { return this.insuranceLine; }
/* 14 */   public Integer getActualBenefits() { return this.actualBenefits; } public Double getMinimumSalaryMonth() {
/* 15 */     return this.minimumSalaryMonth;
/*    */   } }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Medic\Model\Examination\InsuranceCustomerModel.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */