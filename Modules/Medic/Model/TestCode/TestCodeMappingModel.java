/*    */ package nencer.app.Modules.Medic.Model.TestCode;
/*    */ public class TestCodeMappingModel { private String testCode; private String serviceCode; private Integer serviceId;
/*    */   private Integer testDeviceId;
/*    */   
/*  5 */   public void setTestCode(String testCode) { this.testCode = testCode; } private Integer totalRecord; private String testName; private String serviceName; private String deviceName; public void setServiceCode(String serviceCode) { this.serviceCode = serviceCode; } public void setServiceId(Integer serviceId) { this.serviceId = serviceId; } public void setTestDeviceId(Integer testDeviceId) { this.testDeviceId = testDeviceId; } public void setTotalRecord(Integer totalRecord) { this.totalRecord = totalRecord; } public void setTestName(String testName) { this.testName = testName; } public void setServiceName(String serviceName) { this.serviceName = serviceName; } public void setDeviceName(String deviceName) { this.deviceName = deviceName; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof TestCodeMappingModel)) return false;  TestCodeMappingModel other = (TestCodeMappingModel)o; if (!other.canEqual(this)) return false;  Object this$testCode = getTestCode(), other$testCode = other.getTestCode(); if ((this$testCode == null) ? (other$testCode != null) : !this$testCode.equals(other$testCode)) return false;  Object this$serviceCode = getServiceCode(), other$serviceCode = other.getServiceCode(); if ((this$serviceCode == null) ? (other$serviceCode != null) : !this$serviceCode.equals(other$serviceCode)) return false;  Object this$serviceId = getServiceId(), other$serviceId = other.getServiceId(); if ((this$serviceId == null) ? (other$serviceId != null) : !this$serviceId.equals(other$serviceId)) return false;  Object this$testDeviceId = getTestDeviceId(), other$testDeviceId = other.getTestDeviceId(); if ((this$testDeviceId == null) ? (other$testDeviceId != null) : !this$testDeviceId.equals(other$testDeviceId)) return false;  Object this$totalRecord = getTotalRecord(), other$totalRecord = other.getTotalRecord(); if ((this$totalRecord == null) ? (other$totalRecord != null) : !this$totalRecord.equals(other$totalRecord)) return false;  Object this$testName = getTestName(), other$testName = other.getTestName(); if ((this$testName == null) ? (other$testName != null) : !this$testName.equals(other$testName)) return false;  Object this$serviceName = getServiceName(), other$serviceName = other.getServiceName(); if ((this$serviceName == null) ? (other$serviceName != null) : !this$serviceName.equals(other$serviceName)) return false;  Object this$deviceName = getDeviceName(), other$deviceName = other.getDeviceName(); return !((this$deviceName == null) ? (other$deviceName != null) : !this$deviceName.equals(other$deviceName)); } protected boolean canEqual(Object other) { return other instanceof TestCodeMappingModel; } public int hashCode() { int PRIME = 59; result = 1; Object $testCode = getTestCode(); result = result * 59 + (($testCode == null) ? 43 : $testCode.hashCode()); Object $serviceCode = getServiceCode(); result = result * 59 + (($serviceCode == null) ? 43 : $serviceCode.hashCode()); Object $serviceId = getServiceId(); result = result * 59 + (($serviceId == null) ? 43 : $serviceId.hashCode()); Object $testDeviceId = getTestDeviceId(); result = result * 59 + (($testDeviceId == null) ? 43 : $testDeviceId.hashCode()); Object $totalRecord = getTotalRecord(); result = result * 59 + (($totalRecord == null) ? 43 : $totalRecord.hashCode()); Object $testName = getTestName(); result = result * 59 + (($testName == null) ? 43 : $testName.hashCode()); Object $serviceName = getServiceName(); result = result * 59 + (($serviceName == null) ? 43 : $serviceName.hashCode()); Object $deviceName = getDeviceName(); return result * 59 + (($deviceName == null) ? 43 : $deviceName.hashCode()); } public String toString() { return "TestCodeMappingModel(testCode=" + getTestCode() + ", serviceCode=" + getServiceCode() + ", serviceId=" + getServiceId() + ", testDeviceId=" + getTestDeviceId() + ", totalRecord=" + getTotalRecord() + ", testName=" + getTestName() + ", serviceName=" + getServiceName() + ", deviceName=" + getDeviceName() + ")"; }
/*    */   
/*  7 */   public String getTestCode() { return this.testCode; }
/*  8 */   public String getServiceCode() { return this.serviceCode; }
/*  9 */   public Integer getServiceId() { return this.serviceId; }
/* 10 */   public Integer getTestDeviceId() { return this.testDeviceId; }
/* 11 */   public Integer getTotalRecord() { return this.totalRecord; }
/* 12 */   public String getTestName() { return this.testName; }
/* 13 */   public String getServiceName() { return this.serviceName; } public String getDeviceName() {
/* 14 */     return this.deviceName;
/*    */   } }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Medic\Model\TestCode\TestCodeMappingModel.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */