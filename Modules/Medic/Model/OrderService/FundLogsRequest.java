/*    */ package nencer.app.Modules.Medic.Model.OrderService;public class FundLogsRequest { private Double fees; private Double discount; private String discountReason; @NotNull(message = "804")
/*    */   @Range(min = 0L, message = "303")
/*    */   private Double payAmount; private Double netAmount;
/*    */   @Pattern(regexp = "TU|HU|TT", message = "Loai thu khong hop le")
/*    */   private String orderType;
/*    */   private String paygate;
/*    */   private String description;
/*    */   private String note;
/*    */   private List<OrderServiceRequest> orderServiceRequests;
/*    */   private List<MedicProductOrder> orderProductRequests;
/*    */   @NotNull(message = "804")
/*    */   @Range(min = 1L, message = "303")
/*    */   private Integer creatorId;
/*    */   
/* 15 */   public void setFees(Double fees) { this.fees = fees; } public void setDiscount(Double discount) { this.discount = discount; } public void setDiscountReason(String discountReason) { this.discountReason = discountReason; } public void setPayAmount(Double payAmount) { this.payAmount = payAmount; } public void setNetAmount(Double netAmount) { this.netAmount = netAmount; } public void setOrderType(String orderType) { this.orderType = orderType; } public void setPaygate(String paygate) { this.paygate = paygate; } public void setDescription(String description) { this.description = description; } public void setNote(String note) { this.note = note; } public void setOrderServiceRequests(List<OrderServiceRequest> orderServiceRequests) { this.orderServiceRequests = orderServiceRequests; } public void setOrderProductRequests(List<MedicProductOrder> orderProductRequests) { this.orderProductRequests = orderProductRequests; } public void setCreatorId(Integer creatorId) { this.creatorId = creatorId; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof FundLogsRequest)) return false;  FundLogsRequest other = (FundLogsRequest)o; if (!other.canEqual(this)) return false;  Object this$fees = getFees(), other$fees = other.getFees(); if ((this$fees == null) ? (other$fees != null) : !this$fees.equals(other$fees)) return false;  Object this$discount = getDiscount(), other$discount = other.getDiscount(); if ((this$discount == null) ? (other$discount != null) : !this$discount.equals(other$discount)) return false;  Object this$discountReason = getDiscountReason(), other$discountReason = other.getDiscountReason(); if ((this$discountReason == null) ? (other$discountReason != null) : !this$discountReason.equals(other$discountReason)) return false;  Object this$payAmount = getPayAmount(), other$payAmount = other.getPayAmount(); if ((this$payAmount == null) ? (other$payAmount != null) : !this$payAmount.equals(other$payAmount)) return false;  Object this$netAmount = getNetAmount(), other$netAmount = other.getNetAmount(); if ((this$netAmount == null) ? (other$netAmount != null) : !this$netAmount.equals(other$netAmount)) return false;  Object this$orderType = getOrderType(), other$orderType = other.getOrderType(); if ((this$orderType == null) ? (other$orderType != null) : !this$orderType.equals(other$orderType)) return false;  Object this$paygate = getPaygate(), other$paygate = other.getPaygate(); if ((this$paygate == null) ? (other$paygate != null) : !this$paygate.equals(other$paygate)) return false;  Object this$description = getDescription(), other$description = other.getDescription(); if ((this$description == null) ? (other$description != null) : !this$description.equals(other$description)) return false;  Object this$note = getNote(), other$note = other.getNote(); if ((this$note == null) ? (other$note != null) : !this$note.equals(other$note)) return false;  Object<OrderServiceRequest> this$orderServiceRequests = (Object<OrderServiceRequest>)getOrderServiceRequests(), other$orderServiceRequests = (Object<OrderServiceRequest>)other.getOrderServiceRequests(); if ((this$orderServiceRequests == null) ? (other$orderServiceRequests != null) : !this$orderServiceRequests.equals(other$orderServiceRequests)) return false;  Object<MedicProductOrder> this$orderProductRequests = (Object<MedicProductOrder>)getOrderProductRequests(), other$orderProductRequests = (Object<MedicProductOrder>)other.getOrderProductRequests(); if ((this$orderProductRequests == null) ? (other$orderProductRequests != null) : !this$orderProductRequests.equals(other$orderProductRequests)) return false;  Object this$creatorId = getCreatorId(), other$creatorId = other.getCreatorId(); return !((this$creatorId == null) ? (other$creatorId != null) : !this$creatorId.equals(other$creatorId)); } protected boolean canEqual(Object other) { return other instanceof FundLogsRequest; } public int hashCode() { int PRIME = 59; result = 1; Object $fees = getFees(); result = result * 59 + (($fees == null) ? 43 : $fees.hashCode()); Object $discount = getDiscount(); result = result * 59 + (($discount == null) ? 43 : $discount.hashCode()); Object $discountReason = getDiscountReason(); result = result * 59 + (($discountReason == null) ? 43 : $discountReason.hashCode()); Object $payAmount = getPayAmount(); result = result * 59 + (($payAmount == null) ? 43 : $payAmount.hashCode()); Object $netAmount = getNetAmount(); result = result * 59 + (($netAmount == null) ? 43 : $netAmount.hashCode()); Object $orderType = getOrderType(); result = result * 59 + (($orderType == null) ? 43 : $orderType.hashCode()); Object $paygate = getPaygate(); result = result * 59 + (($paygate == null) ? 43 : $paygate.hashCode()); Object $description = getDescription(); result = result * 59 + (($description == null) ? 43 : $description.hashCode()); Object $note = getNote(); result = result * 59 + (($note == null) ? 43 : $note.hashCode()); Object<OrderServiceRequest> $orderServiceRequests = (Object<OrderServiceRequest>)getOrderServiceRequests(); result = result * 59 + (($orderServiceRequests == null) ? 43 : $orderServiceRequests.hashCode()); Object<MedicProductOrder> $orderProductRequests = (Object<MedicProductOrder>)getOrderProductRequests(); result = result * 59 + (($orderProductRequests == null) ? 43 : $orderProductRequests.hashCode()); Object $creatorId = getCreatorId(); return result * 59 + (($creatorId == null) ? 43 : $creatorId.hashCode()); } public String toString() { return "FundLogsRequest(fees=" + getFees() + ", discount=" + getDiscount() + ", discountReason=" + getDiscountReason() + ", payAmount=" + getPayAmount() + ", netAmount=" + getNetAmount() + ", orderType=" + getOrderType() + ", paygate=" + getPaygate() + ", description=" + getDescription() + ", note=" + getNote() + ", orderServiceRequests=" + getOrderServiceRequests() + ", orderProductRequests=" + getOrderProductRequests() + ", creatorId=" + getCreatorId() + ")"; }
/* 16 */   public static FundLogsRequestBuilder builder() { return new FundLogsRequestBuilder(); } public static class FundLogsRequestBuilder { private Double fees; private Double discount; private String discountReason; private Double payAmount; private Double netAmount; private String orderType; public FundLogsRequestBuilder fees(Double fees) { this.fees = fees; return this; } private String paygate; private String description; private String note; private List<OrderServiceRequest> orderServiceRequests; private List<MedicProductOrder> orderProductRequests; private Integer creatorId; public FundLogsRequestBuilder discount(Double discount) { this.discount = discount; return this; } public FundLogsRequestBuilder discountReason(String discountReason) { this.discountReason = discountReason; return this; } public FundLogsRequestBuilder payAmount(Double payAmount) { this.payAmount = payAmount; return this; } public FundLogsRequestBuilder netAmount(Double netAmount) { this.netAmount = netAmount; return this; } public FundLogsRequestBuilder orderType(String orderType) { this.orderType = orderType; return this; } public FundLogsRequestBuilder paygate(String paygate) { this.paygate = paygate; return this; } public FundLogsRequestBuilder description(String description) { this.description = description; return this; } public FundLogsRequestBuilder note(String note) { this.note = note; return this; } public FundLogsRequestBuilder orderServiceRequests(List<OrderServiceRequest> orderServiceRequests) { this.orderServiceRequests = orderServiceRequests; return this; } public FundLogsRequestBuilder orderProductRequests(List<MedicProductOrder> orderProductRequests) { this.orderProductRequests = orderProductRequests; return this; } public FundLogsRequestBuilder creatorId(Integer creatorId) { this.creatorId = creatorId; return this; } public FundLogsRequest build() { return new FundLogsRequest(this.fees, this.discount, this.discountReason, this.payAmount, this.netAmount, this.orderType, this.paygate, this.description, this.note, this.orderServiceRequests, this.orderProductRequests, this.creatorId); } public String toString() { return "FundLogsRequest.FundLogsRequestBuilder(fees=" + this.fees + ", discount=" + this.discount + ", discountReason=" + this.discountReason + ", payAmount=" + this.payAmount + ", netAmount=" + this.netAmount + ", orderType=" + this.orderType + ", paygate=" + this.paygate + ", description=" + this.description + ", note=" + this.note + ", orderServiceRequests=" + this.orderServiceRequests + ", orderProductRequests=" + this.orderProductRequests + ", creatorId=" + this.creatorId + ")"; } } public FundLogsRequest(Double fees, Double discount, String discountReason, Double payAmount, Double netAmount, String orderType, String paygate, String description, String note, List<OrderServiceRequest> orderServiceRequests, List<MedicProductOrder> orderProductRequests, Integer creatorId) {
/* 17 */     this.fees = fees; this.discount = discount; this.discountReason = discountReason; this.payAmount = payAmount; this.netAmount = netAmount; this.orderType = orderType; this.paygate = paygate; this.description = description; this.note = note; this.orderServiceRequests = orderServiceRequests; this.orderProductRequests = orderProductRequests; this.creatorId = creatorId;
/*    */   }
/*    */   public FundLogsRequest() {}
/* 20 */   public Double getFees() { return this.fees; }
/* 21 */   public Double getDiscount() { return this.discount; } public String getDiscountReason() {
/* 22 */     return this.discountReason;
/*    */   }
/*    */   
/* 25 */   public Double getPayAmount() { return this.payAmount; } public Double getNetAmount() {
/* 26 */     return this.netAmount;
/*    */   }
/*    */   
/* 29 */   public String getOrderType() { return this.orderType; }
/* 30 */   public String getPaygate() { return this.paygate; }
/* 31 */   public String getDescription() { return this.description; } public String getNote() {
/* 32 */     return this.note;
/*    */   }
/*    */   
/* 35 */   public List<OrderServiceRequest> getOrderServiceRequests() { return this.orderServiceRequests; } public List<MedicProductOrder> getOrderProductRequests() {
/* 36 */     return this.orderProductRequests;
/*    */   }
/*    */   
/*    */   public Integer getCreatorId() {
/* 40 */     return this.creatorId;
/*    */   } }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Medic\Model\OrderService\FundLogsRequest.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */