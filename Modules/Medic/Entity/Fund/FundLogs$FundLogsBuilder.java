/*    */ package nencer.app.Modules.Medic.Entity.Fund;
/*    */ public class FundLogsBuilder { private Integer fundLogId; private String code;
/*    */   private String fundLogChannel;
/*    */   private Integer checkinId;
/*    */   private Integer orderId;
/*    */   private String currencyCode;
/*    */   private String description;
/*    */   private Integer creator;
/*    */   private Date createdAt;
/*    */   private Date updatedAt;
/*    */   private Integer customerId;
/*    */   private String status;
/*    */   private String orderType;
/*    */   
/* 15 */   public FundLogsBuilder fundLogId(Integer fundLogId) { this.fundLogId = fundLogId; return this; } private Double netAmount; private Double fees; private Double discount; private Double payAmount; private String paygate; private String note; private String bookNumber; private String serviceObject; private Integer benefitRate; private Double copayPatient; private Double patientsPaid; private Double patientsInDebt; private List<MedicOrderServices> medicOrderServices; private List<MedicProductOrderModel> medicProductOrders; public FundLogsBuilder code(String code) { this.code = code; return this; } public FundLogsBuilder fundLogChannel(String fundLogChannel) { this.fundLogChannel = fundLogChannel; return this; } public FundLogsBuilder checkinId(Integer checkinId) { this.checkinId = checkinId; return this; } public FundLogsBuilder orderId(Integer orderId) { this.orderId = orderId; return this; } public FundLogsBuilder currencyCode(String currencyCode) { this.currencyCode = currencyCode; return this; } public FundLogsBuilder description(String description) { this.description = description; return this; } public FundLogsBuilder creator(Integer creator) { this.creator = creator; return this; } public FundLogsBuilder createdAt(Date createdAt) { this.createdAt = createdAt; return this; } public FundLogsBuilder updatedAt(Date updatedAt) { this.updatedAt = updatedAt; return this; } public FundLogsBuilder customerId(Integer customerId) { this.customerId = customerId; return this; } public FundLogsBuilder status(String status) { this.status = status; return this; } public FundLogsBuilder orderType(String orderType) { this.orderType = orderType; return this; } public FundLogsBuilder netAmount(Double netAmount) { this.netAmount = netAmount; return this; } public FundLogsBuilder fees(Double fees) { this.fees = fees; return this; } public FundLogsBuilder discount(Double discount) { this.discount = discount; return this; } public FundLogsBuilder payAmount(Double payAmount) { this.payAmount = payAmount; return this; } public FundLogsBuilder paygate(String paygate) { this.paygate = paygate; return this; } public FundLogsBuilder note(String note) { this.note = note; return this; } public FundLogsBuilder bookNumber(String bookNumber) { this.bookNumber = bookNumber; return this; } public FundLogsBuilder serviceObject(String serviceObject) { this.serviceObject = serviceObject; return this; } public FundLogsBuilder benefitRate(Integer benefitRate) { this.benefitRate = benefitRate; return this; } public FundLogsBuilder copayPatient(Double copayPatient) { this.copayPatient = copayPatient; return this; } public FundLogsBuilder patientsPaid(Double patientsPaid) { this.patientsPaid = patientsPaid; return this; } public FundLogsBuilder patientsInDebt(Double patientsInDebt) { this.patientsInDebt = patientsInDebt; return this; } public FundLogsBuilder medicOrderServices(List<MedicOrderServices> medicOrderServices) { this.medicOrderServices = medicOrderServices; return this; } public FundLogsBuilder medicProductOrders(List<MedicProductOrderModel> medicProductOrders) { this.medicProductOrders = medicProductOrders; return this; } public FundLogs build() { return new FundLogs(this.fundLogId, this.code, this.fundLogChannel, this.checkinId, this.orderId, this.currencyCode, this.description, this.creator, this.createdAt, this.updatedAt, this.customerId, this.status, this.orderType, this.netAmount, this.fees, this.discount, this.payAmount, this.paygate, this.note, this.bookNumber, this.serviceObject, this.benefitRate, this.copayPatient, this.patientsPaid, this.patientsInDebt, this.medicOrderServices, this.medicProductOrders); } public String toString() { return "FundLogs.FundLogsBuilder(fundLogId=" + this.fundLogId + ", code=" + this.code + ", fundLogChannel=" + this.fundLogChannel + ", checkinId=" + this.checkinId + ", orderId=" + this.orderId + ", currencyCode=" + this.currencyCode + ", description=" + this.description + ", creator=" + this.creator + ", createdAt=" + this.createdAt + ", updatedAt=" + this.updatedAt + ", customerId=" + this.customerId + ", status=" + this.status + ", orderType=" + this.orderType + ", netAmount=" + this.netAmount + ", fees=" + this.fees + ", discount=" + this.discount + ", payAmount=" + this.payAmount + ", paygate=" + this.paygate + ", note=" + this.note + ", bookNumber=" + this.bookNumber + ", serviceObject=" + this.serviceObject + ", benefitRate=" + this.benefitRate + ", copayPatient=" + this.copayPatient + ", patientsPaid=" + this.patientsPaid + ", patientsInDebt=" + this.patientsInDebt + ", medicOrderServices=" + this.medicOrderServices + ", medicProductOrders=" + this.medicProductOrders + ")"; }
/*    */    }


/* Location:              C:\Users\Administrator\Desktop\!\nencer\app\Modules\Medic\Entity\Fund\FundLogs$FundLogsBuilder.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */